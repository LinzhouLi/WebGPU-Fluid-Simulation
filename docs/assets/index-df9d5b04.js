var bs=Object.defineProperty;var ws=(f,t,e)=>t in f?bs(f,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):f[t]=e;var A=(f,t,e)=>(ws(f,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();var te=function(){var f=0,t=document.createElement("div");t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",function(h){h.preventDefault(),i(++f%t.children.length)},!1);function e(h){return t.appendChild(h.dom),h}function i(h){for(var c=0;c<t.children.length;c++)t.children[c].style.display=c===h?"block":"none";f=h}var s=(performance||Date).now(),r=s,n=0,a=e(new te.Panel("FPS","#0ff","#002")),o=e(new te.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var l=e(new te.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:t,addPanel:e,showPanel:i,begin:function(){s=(performance||Date).now()},end:function(){n++;var h=(performance||Date).now();if(o.update(h-s,200),h>r+1e3&&(a.update(n*1e3/(h-r),100),r=h,n=0,l)){var c=performance.memory;l.update(c.usedJSHeapSize/1048576,c.jsHeapSizeLimit/1048576)}return h},update:function(){s=this.end()},domElement:t,setMode:i}};te.Panel=function(f,t,e){var i=1/0,s=0,r=Math.round,n=r(window.devicePixelRatio||1),a=80*n,o=48*n,l=3*n,h=2*n,c=3*n,u=15*n,d=74*n,p=30*n,y=document.createElement("canvas");y.width=a,y.height=o,y.style.cssText="width:80px;height:48px";var g=y.getContext("2d");return g.font="bold "+9*n+"px Helvetica,Arial,sans-serif",g.textBaseline="top",g.fillStyle=e,g.fillRect(0,0,a,o),g.fillStyle=t,g.fillText(f,l,h),g.fillRect(c,u,d,p),g.fillStyle=e,g.globalAlpha=.9,g.fillRect(c,u,d,p),{dom:y,update:function(b,M){i=Math.min(i,b),s=Math.max(s,b),g.fillStyle=e,g.globalAlpha=1,g.fillRect(0,0,a,u),g.fillStyle=t,g.fillText(r(b)+" "+f+" ("+r(i)+"-"+r(s)+")",l,h),g.drawImage(y,c+n,u,d-n,p,c,u,d-n,p),g.fillRect(c+d-n,u,n,p),g.fillStyle=e,g.globalAlpha=.9,g.fillRect(c+d-n,u,n,r((1-b/M)*p))}}};/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const es="148",kt={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Bt={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},oi=0,Ms=1,Ti=1,_s=100,zs=204,Ss=205,As=3,is=0,ss=300,ki=1e3,ue=1001,Bi=1002,vs=1006,Fs=1008,Es=1009,Ps=1023,Cs=3e3,Ts=0,ut="srgb",hi="srgb-linear",Ie=7680,ks=519,Ri=35044;class ae{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let r=0,n=s.length;r<n;r++)s[r].call(this,t);t.target=null}}}const G=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],De=Math.PI/180,Oi=180/Math.PI;function oe(){const f=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(G[f&255]+G[f>>8&255]+G[f>>16&255]+G[f>>24&255]+"-"+G[t&255]+G[t>>8&255]+"-"+G[t>>16&15|64]+G[t>>24&255]+"-"+G[e&63|128]+G[e>>8&255]+"-"+G[e>>16&255]+G[e>>24&255]+G[i&255]+G[i>>8&255]+G[i>>16&255]+G[i>>24&255]).toLowerCase()}function Y(f,t,e){return Math.max(t,Math.min(e,f))}function Bs(f,t){return(f%t+t)%t}function je(f,t,e){return(1-e)*f+e*t}function de(f,t){switch(t.constructor){case Float32Array:return f;case Uint16Array:return f/65535;case Uint8Array:return f/255;case Int16Array:return Math.max(f/32767,-1);case Int8Array:return Math.max(f/127,-1);default:throw new Error("Invalid component type.")}}function q(f,t){switch(t.constructor){case Float32Array:return f;case Uint16Array:return Math.round(f*65535);case Uint8Array:return Math.round(f*255);case Int16Array:return Math.round(f*32767);case Int8Array:return Math.round(f*127);default:throw new Error("Invalid component type.")}}class C{constructor(t=0,e=0){C.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),r=this.x-t.x,n=this.y-t.y;return this.x=r*i-n*s+t.x,this.y=r*s+n*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class vt{constructor(){vt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,i,s,r,n,a,o,l){const h=this.elements;return h[0]=t,h[1]=s,h[2]=a,h[3]=e,h[4]=r,h[5]=o,h[6]=i,h[7]=n,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,r=this.elements,n=i[0],a=i[3],o=i[6],l=i[1],h=i[4],c=i[7],u=i[2],d=i[5],p=i[8],y=s[0],g=s[3],b=s[6],M=s[1],_=s[4],z=s[7],w=s[2],F=s[5],v=s[8];return r[0]=n*y+a*M+o*w,r[3]=n*g+a*_+o*F,r[6]=n*b+a*z+o*v,r[1]=l*y+h*M+c*w,r[4]=l*g+h*_+c*F,r[7]=l*b+h*z+c*v,r[2]=u*y+d*M+p*w,r[5]=u*g+d*_+p*F,r[8]=u*b+d*z+p*v,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],a=t[5],o=t[6],l=t[7],h=t[8];return e*n*h-e*a*l-i*r*h+i*a*o+s*r*l-s*n*o}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],a=t[5],o=t[6],l=t[7],h=t[8],c=h*n-a*l,u=a*o-h*r,d=l*r-n*o,p=e*c+i*u+s*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/p;return t[0]=c*y,t[1]=(s*l-h*i)*y,t[2]=(a*i-s*n)*y,t[3]=u*y,t[4]=(h*e-s*o)*y,t[5]=(s*r-a*e)*y,t[6]=d*y,t[7]=(i*o-l*e)*y,t[8]=(n*e-i*r)*y,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,r,n,a){const o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*n+l*a)+n+t,-s*l,s*o,-s*(-l*n+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Le.makeScale(t,e)),this}rotate(t){return this.premultiply(Le.makeRotation(-t)),this}translate(t,e){return this.premultiply(Le.makeTranslation(t,e)),this}makeTranslation(t,e){return this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Le=new vt;function Rs(f){for(let t=f.length-1;t>=0;--t)if(f[t]>=65535)return!0;return!1}function Ii(f){return document.createElementNS("http://www.w3.org/1999/xhtml",f)}function _t(f){return f<.04045?f*.0773993808:Math.pow(f*.9478672986+.0521327014,2.4)}function Pe(f){return f<.0031308?f*12.92:1.055*Math.pow(f,.41666)-.055}const Ue={[ut]:{[hi]:_t},[hi]:{[ut]:Pe}},W={legacyMode:!0,get workingColorSpace(){return hi},set workingColorSpace(f){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(f,t,e){if(this.legacyMode||t===e||!t||!e)return f;if(Ue[t]&&Ue[t][e]!==void 0){const i=Ue[t][e];return f.r=i(f.r),f.g=i(f.g),f.b=i(f.b),f}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(f,t){return this.convert(f,this.workingColorSpace,t)},toWorkingColorSpace:function(f,t){return this.convert(f,t,this.workingColorSpace)}},rs={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},I={r:0,g:0,b:0},et={h:0,s:0,l:0},pe={h:0,s:0,l:0};function Ne(f,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?f+(t-f)*6*e:e<1/2?t:e<2/3?f+(t-f)*6*(2/3-e):f}function me(f,t){return t.r=f.r,t.g=f.g,t.b=f.b,t}class ne{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&i===void 0?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ut){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,W.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=W.workingColorSpace){return this.r=t,this.g=e,this.b=i,W.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=W.workingColorSpace){if(t=Bs(t,1),e=Y(e,0,1),i=Y(i,0,1),e===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+e):i+e-i*e,n=2*i-r;this.r=Ne(n,r,t+1/3),this.g=Ne(n,r,t),this.b=Ne(n,r,t-1/3)}return W.toWorkingColorSpace(this,s),this}setStyle(t,e=ut){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const n=s[1],a=s[2];switch(n){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,W.toWorkingColorSpace(this,e),i(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,W.toWorkingColorSpace(this,e),i(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const o=parseFloat(r[1])/360,l=parseFloat(r[2])/100,h=parseFloat(r[3])/100;return i(r[4]),this.setHSL(o,l,h,e)}break}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],n=r.length;if(n===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,W.toWorkingColorSpace(this,e),this;if(n===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,W.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=ut){const i=rs[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=_t(t.r),this.g=_t(t.g),this.b=_t(t.b),this}copyLinearToSRGB(t){return this.r=Pe(t.r),this.g=Pe(t.g),this.b=Pe(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ut){return W.fromWorkingColorSpace(me(this,I),t),Y(I.r*255,0,255)<<16^Y(I.g*255,0,255)<<8^Y(I.b*255,0,255)<<0}getHexString(t=ut){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=W.workingColorSpace){W.fromWorkingColorSpace(me(this,I),e);const i=I.r,s=I.g,r=I.b,n=Math.max(i,s,r),a=Math.min(i,s,r);let o,l;const h=(a+n)/2;if(a===n)o=0,l=0;else{const c=n-a;switch(l=h<=.5?c/(n+a):c/(2-n-a),n){case i:o=(s-r)/c+(s<r?6:0);break;case s:o=(r-i)/c+2;break;case r:o=(i-s)/c+4;break}o/=6}return t.h=o,t.s=l,t.l=h,t}getRGB(t,e=W.workingColorSpace){return W.fromWorkingColorSpace(me(this,I),e),t.r=I.r,t.g=I.g,t.b=I.b,t}getStyle(t=ut){return W.fromWorkingColorSpace(me(this,I),t),t!==ut?`color(${t} ${I.r} ${I.g} ${I.b})`:`rgb(${I.r*255|0},${I.g*255|0},${I.b*255|0})`}offsetHSL(t,e,i){return this.getHSL(et),et.h+=t,et.s+=e,et.l+=i,this.setHSL(et.h,et.s,et.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(et),t.getHSL(pe);const i=je(et.h,pe.h,e),s=je(et.s,pe.s,e),r=je(et.l,pe.l,e);return this.setHSL(i,s,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}ne.NAMES=rs;let Rt;class Os{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Rt===void 0&&(Rt=Ii("canvas")),Rt.width=t.width,Rt.height=t.height;const i=Rt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Rt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Ii("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),r=s.data;for(let n=0;n<r.length;n++)r[n]=_t(r[n]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(_t(e[i]/255)*255):e[i]=_t(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Is{constructor(t=null){this.isSource=!0,this.uuid=oe(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let n=0,a=s.length;n<a;n++)s[n].isDataTexture?r.push(Ge(s[n].image)):r.push(Ge(s[n]))}else r=Ge(s);i.url=r}return e||(t.images[this.uuid]=i),i}}function Ge(f){return typeof HTMLImageElement<"u"&&f instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&f instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&f instanceof ImageBitmap?Os.getDataURL(f):f.data?{data:Array.from(f.data),width:f.width,height:f.height,type:f.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ds=0;class zt extends ae{constructor(t=zt.DEFAULT_IMAGE,e=zt.DEFAULT_MAPPING,i=ue,s=ue,r=vs,n=Fs,a=Ps,o=Es,l=zt.DEFAULT_ANISOTROPY,h=Cs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ds++}),this.uuid=oe(),this.name="",this.source=new Is(t),this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=s,this.magFilter=r,this.minFilter=n,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new C(0,0),this.repeat=new C(1,1),this.center=new C(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new vt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ss)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ki:t.x=t.x-Math.floor(t.x);break;case ue:t.x=t.x<0?0:1;break;case Bi:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case ki:t.y=t.y-Math.floor(t.y);break;case ue:t.y=t.y<0?0:1;break;case Bi:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}zt.DEFAULT_IMAGE=null;zt.DEFAULT_MAPPING=ss;zt.DEFAULT_ANISOTROPY=1;class ci{constructor(t=0,e=0,i=0,s=1){ci.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,r=this.w,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s+n[12]*r,this.y=n[1]*e+n[5]*i+n[9]*s+n[13]*r,this.z=n[2]*e+n[6]*i+n[10]*s+n[14]*r,this.w=n[3]*e+n[7]*i+n[11]*s+n[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,s,r;const o=t.elements,l=o[0],h=o[4],c=o[8],u=o[1],d=o[5],p=o[9],y=o[2],g=o[6],b=o[10];if(Math.abs(h-u)<.01&&Math.abs(c-y)<.01&&Math.abs(p-g)<.01){if(Math.abs(h+u)<.1&&Math.abs(c+y)<.1&&Math.abs(p+g)<.1&&Math.abs(l+d+b-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const _=(l+1)/2,z=(d+1)/2,w=(b+1)/2,F=(h+u)/4,v=(c+y)/4,V=(p+g)/4;return _>z&&_>w?_<.01?(i=0,s=.707106781,r=.707106781):(i=Math.sqrt(_),s=F/i,r=v/i):z>w?z<.01?(i=.707106781,s=0,r=.707106781):(s=Math.sqrt(z),i=F/s,r=V/s):w<.01?(i=.707106781,s=.707106781,r=0):(r=Math.sqrt(w),i=v/r,s=V/r),this.set(i,s,r,e),this}let M=Math.sqrt((g-p)*(g-p)+(c-y)*(c-y)+(u-h)*(u-h));return Math.abs(M)<.001&&(M=1),this.x=(g-p)/M,this.y=(c-y)/M,this.z=(u-h)/M,this.w=Math.acos((l+d+b-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class St{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,r,n,a){let o=i[s+0],l=i[s+1],h=i[s+2],c=i[s+3];const u=r[n+0],d=r[n+1],p=r[n+2],y=r[n+3];if(a===0){t[e+0]=o,t[e+1]=l,t[e+2]=h,t[e+3]=c;return}if(a===1){t[e+0]=u,t[e+1]=d,t[e+2]=p,t[e+3]=y;return}if(c!==y||o!==u||l!==d||h!==p){let g=1-a;const b=o*u+l*d+h*p+c*y,M=b>=0?1:-1,_=1-b*b;if(_>Number.EPSILON){const w=Math.sqrt(_),F=Math.atan2(w,b*M);g=Math.sin(g*F)/w,a=Math.sin(a*F)/w}const z=a*M;if(o=o*g+u*z,l=l*g+d*z,h=h*g+p*z,c=c*g+y*z,g===1-a){const w=1/Math.sqrt(o*o+l*l+h*h+c*c);o*=w,l*=w,h*=w,c*=w}}t[e]=o,t[e+1]=l,t[e+2]=h,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,s,r,n){const a=i[s],o=i[s+1],l=i[s+2],h=i[s+3],c=r[n],u=r[n+1],d=r[n+2],p=r[n+3];return t[e]=a*p+h*c+o*d-l*u,t[e+1]=o*p+h*u+l*c-a*d,t[e+2]=l*p+h*d+a*u-o*c,t[e+3]=h*p-a*c-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const i=t._x,s=t._y,r=t._z,n=t._order,a=Math.cos,o=Math.sin,l=a(i/2),h=a(s/2),c=a(r/2),u=o(i/2),d=o(s/2),p=o(r/2);switch(n){case"XYZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"YXZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"ZXY":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"ZYX":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"YZX":this._x=u*h*c+l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c-u*d*p;break;case"XZY":this._x=u*h*c-l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],r=e[8],n=e[1],a=e[5],o=e[9],l=e[2],h=e[6],c=e[10],u=i+a+c;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(h-o)*d,this._y=(r-l)*d,this._z=(n-s)*d}else if(i>a&&i>c){const d=2*Math.sqrt(1+i-a-c);this._w=(h-o)/d,this._x=.25*d,this._y=(s+n)/d,this._z=(r+l)/d}else if(a>c){const d=2*Math.sqrt(1+a-i-c);this._w=(r-l)/d,this._x=(s+n)/d,this._y=.25*d,this._z=(o+h)/d}else{const d=2*Math.sqrt(1+c-i-a);this._w=(n-s)/d,this._x=(r+l)/d,this._y=(o+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Y(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,r=t._z,n=t._w,a=e._x,o=e._y,l=e._z,h=e._w;return this._x=i*h+n*a+s*l-r*o,this._y=s*h+n*o+r*a-i*l,this._z=r*h+n*l+i*o-s*a,this._w=n*h-i*a-s*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,r=this._z,n=this._w;let a=n*t._w+i*t._x+s*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=n,this._x=i,this._y=s,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const d=1-e;return this._w=d*n+e*this._w,this._x=d*i+e*this._x,this._y=d*s+e*this._y,this._z=d*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),h=Math.atan2(l,a),c=Math.sin((1-e)*h)/l,u=Math.sin(e*h)/l;return this._w=n*c+this._w*u,this._x=i*c+this._x*u,this._y=s*c+this._y*u,this._z=r*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),s=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(s),i*Math.sin(r),i*Math.cos(r),e*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,e=0,i=0){x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Di.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Di.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*s,this.y=r[1]*e+r[4]*i+r[7]*s,this.z=r[2]*e+r[5]*i+r[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,r=t.elements,n=1/(r[3]*e+r[7]*i+r[11]*s+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*s+r[12])*n,this.y=(r[1]*e+r[5]*i+r[9]*s+r[13])*n,this.z=(r[2]*e+r[6]*i+r[10]*s+r[14])*n,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,r=t.x,n=t.y,a=t.z,o=t.w,l=o*e+n*s-a*i,h=o*i+a*e-r*s,c=o*s+r*i-n*e,u=-r*e-n*i-a*s;return this.x=l*o+u*-r+h*-a-c*-n,this.y=h*o+u*-n+c*-r-l*-a,this.z=c*o+u*-a+l*-n-h*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*s,this.y=r[1]*e+r[5]*i+r[9]*s,this.z=r[2]*e+r[6]*i+r[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,r=t.z,n=e.x,a=e.y,o=e.z;return this.x=s*o-r*a,this.y=r*n-i*o,this.z=i*a-s*n,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Ve.copy(this).projectOnVector(t),this.sub(Ve)}reflect(t){return this.sub(Ve.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(Y(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ve=new x,Di=new St;class he{constructor(t=new x(1/0,1/0,1/0),e=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,s=1/0,r=-1/0,n=-1/0,a=-1/0;for(let o=0,l=t.length;o<l;o+=3){const h=t[o],c=t[o+1],u=t[o+2];h<e&&(e=h),c<i&&(i=c),u<s&&(s=u),h>r&&(r=h),c>n&&(n=c),u>a&&(a=u)}return this.min.set(e,i,s),this.max.set(r,n,a),this}setFromBufferAttribute(t){let e=1/0,i=1/0,s=1/0,r=-1/0,n=-1/0,a=-1/0;for(let o=0,l=t.count;o<l;o++){const h=t.getX(o),c=t.getY(o),u=t.getZ(o);h<e&&(e=h),c<i&&(i=c),u<s&&(s=u),h>r&&(r=h),c>n&&(n=c),u>a&&(a=u)}return this.min.set(e,i,s),this.max.set(r,n,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=bt.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0)if(e&&i.attributes!=null&&i.attributes.position!==void 0){const r=i.attributes.position;for(let n=0,a=r.count;n<a;n++)bt.fromBufferAttribute(r,n).applyMatrix4(t.matrixWorld),this.expandByPoint(bt)}else i.boundingBox===null&&i.computeBoundingBox(),We.copy(i.boundingBox),We.applyMatrix4(t.matrixWorld),this.union(We);const s=t.children;for(let r=0,n=s.length;r<n;r++)this.expandByObject(s[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,bt),bt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(qt),fe.subVectors(this.max,qt),Ot.subVectors(t.a,qt),It.subVectors(t.b,qt),Dt.subVectors(t.c,qt),pt.subVectors(It,Ot),mt.subVectors(Dt,It),wt.subVectors(Ot,Dt);let e=[0,-pt.z,pt.y,0,-mt.z,mt.y,0,-wt.z,wt.y,pt.z,0,-pt.x,mt.z,0,-mt.x,wt.z,0,-wt.x,-pt.y,pt.x,0,-mt.y,mt.x,0,-wt.y,wt.x,0];return!$e(e,Ot,It,Dt,fe)||(e=[1,0,0,0,1,0,0,0,1],!$e(e,Ot,It,Dt,fe))?!1:(ye.crossVectors(pt,mt),e=[ye.x,ye.y,ye.z],$e(e,Ot,It,Dt,fe))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return bt.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(bt).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(at[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),at[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),at[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),at[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),at[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),at[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),at[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),at[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(at),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const at=[new x,new x,new x,new x,new x,new x,new x,new x],bt=new x,We=new he,Ot=new x,It=new x,Dt=new x,pt=new x,mt=new x,wt=new x,qt=new x,fe=new x,ye=new x,Mt=new x;function $e(f,t,e,i,s){for(let r=0,n=f.length-3;r<=n;r+=3){Mt.fromArray(f,r);const a=s.x*Math.abs(Mt.x)+s.y*Math.abs(Mt.y)+s.z*Math.abs(Mt.z),o=t.dot(Mt),l=e.dot(Mt),h=i.dot(Mt);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>a)return!1}return!0}const js=new he,Ht=new x,Ye=new x;class ui{constructor(t=new x,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):js.setFromPoints(t).getCenter(i);let s=0;for(let r=0,n=t.length;r<n;r++)s=Math.max(s,i.distanceToSquared(t[r]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ht.subVectors(t,this.center);const e=Ht.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(Ht,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ye.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ht.copy(t.center).add(Ye)),this.expandByPoint(Ht.copy(t.center).sub(Ye))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ot=new x,qe=new x,xe=new x,ft=new x,He=new x,ge=new x,Xe=new x;class Ls{constructor(t=new x,e=new x(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ot)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ot.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ot.copy(this.direction).multiplyScalar(e).add(this.origin),ot.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){qe.copy(t).add(e).multiplyScalar(.5),xe.copy(e).sub(t).normalize(),ft.copy(this.origin).sub(qe);const r=t.distanceTo(e)*.5,n=-this.direction.dot(xe),a=ft.dot(this.direction),o=-ft.dot(xe),l=ft.lengthSq(),h=Math.abs(1-n*n);let c,u,d,p;if(h>0)if(c=n*o-a,u=n*a-o,p=r*h,c>=0)if(u>=-p)if(u<=p){const y=1/h;c*=y,u*=y,d=c*(c+n*u+2*a)+u*(n*c+u+2*o)+l}else u=r,c=Math.max(0,-(n*u+a)),d=-c*c+u*(u+2*o)+l;else u=-r,c=Math.max(0,-(n*u+a)),d=-c*c+u*(u+2*o)+l;else u<=-p?(c=Math.max(0,-(-n*r+a)),u=c>0?-r:Math.min(Math.max(-r,-o),r),d=-c*c+u*(u+2*o)+l):u<=p?(c=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(c=Math.max(0,-(n*r+a)),u=c>0?r:Math.min(Math.max(-r,-o),r),d=-c*c+u*(u+2*o)+l);else u=n>0?-r:r,c=Math.max(0,-(n*u+a)),d=-c*c+u*(u+2*o)+l;return i&&i.copy(this.direction).multiplyScalar(c).add(this.origin),s&&s.copy(xe).multiplyScalar(u).add(qe),d}intersectSphere(t,e){ot.subVectors(t.center,this.origin);const i=ot.dot(this.direction),s=ot.dot(ot)-i*i,r=t.radius*t.radius;if(s>r)return null;const n=Math.sqrt(r-s),a=i-n,o=i+n;return a<0&&o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,r,n,a,o;const l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return l>=0?(i=(t.min.x-u.x)*l,s=(t.max.x-u.x)*l):(i=(t.max.x-u.x)*l,s=(t.min.x-u.x)*l),h>=0?(r=(t.min.y-u.y)*h,n=(t.max.y-u.y)*h):(r=(t.max.y-u.y)*h,n=(t.min.y-u.y)*h),i>n||r>s||((r>i||isNaN(i))&&(i=r),(n<s||isNaN(s))&&(s=n),c>=0?(a=(t.min.z-u.z)*c,o=(t.max.z-u.z)*c):(a=(t.max.z-u.z)*c,o=(t.min.z-u.z)*c),i>o||a>s)||((a>i||i!==i)&&(i=a),(o<s||s!==s)&&(s=o),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,ot)!==null}intersectTriangle(t,e,i,s,r){He.subVectors(e,t),ge.subVectors(i,t),Xe.crossVectors(He,ge);let n=this.direction.dot(Xe),a;if(n>0){if(s)return null;a=1}else if(n<0)a=-1,n=-n;else return null;ft.subVectors(this.origin,t);const o=a*this.direction.dot(ge.crossVectors(ft,ge));if(o<0)return null;const l=a*this.direction.dot(He.cross(ft));if(l<0||o+l>n)return null;const h=-a*ft.dot(Xe);return h<0?null:this.at(h/n,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class L{constructor(){L.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,i,s,r,n,a,o,l,h,c,u,d,p,y,g){const b=this.elements;return b[0]=t,b[4]=e,b[8]=i,b[12]=s,b[1]=r,b[5]=n,b[9]=a,b[13]=o,b[2]=l,b[6]=h,b[10]=c,b[14]=u,b[3]=d,b[7]=p,b[11]=y,b[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new L().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/jt.setFromMatrixColumn(t,0).length(),r=1/jt.setFromMatrixColumn(t,1).length(),n=1/jt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*n,e[9]=i[9]*n,e[10]=i[10]*n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,r=t.z,n=Math.cos(i),a=Math.sin(i),o=Math.cos(s),l=Math.sin(s),h=Math.cos(r),c=Math.sin(r);if(t.order==="XYZ"){const u=n*h,d=n*c,p=a*h,y=a*c;e[0]=o*h,e[4]=-o*c,e[8]=l,e[1]=d+p*l,e[5]=u-y*l,e[9]=-a*o,e[2]=y-u*l,e[6]=p+d*l,e[10]=n*o}else if(t.order==="YXZ"){const u=o*h,d=o*c,p=l*h,y=l*c;e[0]=u+y*a,e[4]=p*a-d,e[8]=n*l,e[1]=n*c,e[5]=n*h,e[9]=-a,e[2]=d*a-p,e[6]=y+u*a,e[10]=n*o}else if(t.order==="ZXY"){const u=o*h,d=o*c,p=l*h,y=l*c;e[0]=u-y*a,e[4]=-n*c,e[8]=p+d*a,e[1]=d+p*a,e[5]=n*h,e[9]=y-u*a,e[2]=-n*l,e[6]=a,e[10]=n*o}else if(t.order==="ZYX"){const u=n*h,d=n*c,p=a*h,y=a*c;e[0]=o*h,e[4]=p*l-d,e[8]=u*l+y,e[1]=o*c,e[5]=y*l+u,e[9]=d*l-p,e[2]=-l,e[6]=a*o,e[10]=n*o}else if(t.order==="YZX"){const u=n*o,d=n*l,p=a*o,y=a*l;e[0]=o*h,e[4]=y-u*c,e[8]=p*c+d,e[1]=c,e[5]=n*h,e[9]=-a*h,e[2]=-l*h,e[6]=d*c+p,e[10]=u-y*c}else if(t.order==="XZY"){const u=n*o,d=n*l,p=a*o,y=a*l;e[0]=o*h,e[4]=-c,e[8]=l*h,e[1]=u*c+y,e[5]=n*h,e[9]=d*c-p,e[2]=p*c-d,e[6]=a*h,e[10]=y*c+u}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Us,t,Ns)}lookAt(t,e,i){const s=this.elements;return H.subVectors(t,e),H.lengthSq()===0&&(H.z=1),H.normalize(),yt.crossVectors(i,H),yt.lengthSq()===0&&(Math.abs(i.z)===1?H.x+=1e-4:H.z+=1e-4,H.normalize(),yt.crossVectors(i,H)),yt.normalize(),be.crossVectors(H,yt),s[0]=yt.x,s[4]=be.x,s[8]=H.x,s[1]=yt.y,s[5]=be.y,s[9]=H.y,s[2]=yt.z,s[6]=be.z,s[10]=H.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,r=this.elements,n=i[0],a=i[4],o=i[8],l=i[12],h=i[1],c=i[5],u=i[9],d=i[13],p=i[2],y=i[6],g=i[10],b=i[14],M=i[3],_=i[7],z=i[11],w=i[15],F=s[0],v=s[4],V=s[8],$=s[12],P=s[1],k=s[5],R=s[9],T=s[13],J=s[2],O=s[6],K=s[10],Ft=s[14],gt=s[3],Et=s[7],Pt=s[11],Ct=s[15];return r[0]=n*F+a*P+o*J+l*gt,r[4]=n*v+a*k+o*O+l*Et,r[8]=n*V+a*R+o*K+l*Pt,r[12]=n*$+a*T+o*Ft+l*Ct,r[1]=h*F+c*P+u*J+d*gt,r[5]=h*v+c*k+u*O+d*Et,r[9]=h*V+c*R+u*K+d*Pt,r[13]=h*$+c*T+u*Ft+d*Ct,r[2]=p*F+y*P+g*J+b*gt,r[6]=p*v+y*k+g*O+b*Et,r[10]=p*V+y*R+g*K+b*Pt,r[14]=p*$+y*T+g*Ft+b*Ct,r[3]=M*F+_*P+z*J+w*gt,r[7]=M*v+_*k+z*O+w*Et,r[11]=M*V+_*R+z*K+w*Pt,r[15]=M*$+_*T+z*Ft+w*Ct,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],r=t[12],n=t[1],a=t[5],o=t[9],l=t[13],h=t[2],c=t[6],u=t[10],d=t[14],p=t[3],y=t[7],g=t[11],b=t[15];return p*(+r*o*c-s*l*c-r*a*u+i*l*u+s*a*d-i*o*d)+y*(+e*o*d-e*l*u+r*n*u-s*n*d+s*l*h-r*o*h)+g*(+e*l*c-e*a*d-r*n*c+i*n*d+r*a*h-i*l*h)+b*(-s*a*h-e*o*c+e*a*u+s*n*c-i*n*u+i*o*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],a=t[5],o=t[6],l=t[7],h=t[8],c=t[9],u=t[10],d=t[11],p=t[12],y=t[13],g=t[14],b=t[15],M=c*g*l-y*u*l+y*o*d-a*g*d-c*o*b+a*u*b,_=p*u*l-h*g*l-p*o*d+n*g*d+h*o*b-n*u*b,z=h*y*l-p*c*l+p*a*d-n*y*d-h*a*b+n*c*b,w=p*c*o-h*y*o-p*a*u+n*y*u+h*a*g-n*c*g,F=e*M+i*_+s*z+r*w;if(F===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const v=1/F;return t[0]=M*v,t[1]=(y*u*r-c*g*r-y*s*d+i*g*d+c*s*b-i*u*b)*v,t[2]=(a*g*r-y*o*r+y*s*l-i*g*l-a*s*b+i*o*b)*v,t[3]=(c*o*r-a*u*r-c*s*l+i*u*l+a*s*d-i*o*d)*v,t[4]=_*v,t[5]=(h*g*r-p*u*r+p*s*d-e*g*d-h*s*b+e*u*b)*v,t[6]=(p*o*r-n*g*r-p*s*l+e*g*l+n*s*b-e*o*b)*v,t[7]=(n*u*r-h*o*r+h*s*l-e*u*l-n*s*d+e*o*d)*v,t[8]=z*v,t[9]=(p*c*r-h*y*r-p*i*d+e*y*d+h*i*b-e*c*b)*v,t[10]=(n*y*r-p*a*r+p*i*l-e*y*l-n*i*b+e*a*b)*v,t[11]=(h*a*r-n*c*r-h*i*l+e*c*l+n*i*d-e*a*d)*v,t[12]=w*v,t[13]=(h*y*s-p*c*s+p*i*u-e*y*u-h*i*g+e*c*g)*v,t[14]=(p*a*s-n*y*s-p*i*o+e*y*o+n*i*g-e*a*g)*v,t[15]=(n*c*s-h*a*s+h*i*o-e*c*o-n*i*u+e*a*u)*v,this}scale(t){const e=this.elements,i=t.x,s=t.y,r=t.z;return e[0]*=i,e[4]*=s,e[8]*=r,e[1]*=i,e[5]*=s,e[9]*=r,e[2]*=i,e[6]*=s,e[10]*=r,e[3]*=i,e[7]*=s,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),r=1-i,n=t.x,a=t.y,o=t.z,l=r*n,h=r*a;return this.set(l*n+i,l*a-s*o,l*o+s*a,0,l*a+s*o,h*a+i,h*o-s*n,0,l*o-s*a,h*o+s*n,r*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,r,n){return this.set(1,i,r,0,t,1,n,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,r=e._x,n=e._y,a=e._z,o=e._w,l=r+r,h=n+n,c=a+a,u=r*l,d=r*h,p=r*c,y=n*h,g=n*c,b=a*c,M=o*l,_=o*h,z=o*c,w=i.x,F=i.y,v=i.z;return s[0]=(1-(y+b))*w,s[1]=(d+z)*w,s[2]=(p-_)*w,s[3]=0,s[4]=(d-z)*F,s[5]=(1-(u+b))*F,s[6]=(g+M)*F,s[7]=0,s[8]=(p+_)*v,s[9]=(g-M)*v,s[10]=(1-(u+y))*v,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let r=jt.set(s[0],s[1],s[2]).length();const n=jt.set(s[4],s[5],s[6]).length(),a=jt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),t.x=s[12],t.y=s[13],t.z=s[14],it.copy(this);const l=1/r,h=1/n,c=1/a;return it.elements[0]*=l,it.elements[1]*=l,it.elements[2]*=l,it.elements[4]*=h,it.elements[5]*=h,it.elements[6]*=h,it.elements[8]*=c,it.elements[9]*=c,it.elements[10]*=c,e.setFromRotationMatrix(it),i.x=r,i.y=n,i.z=a,this}makePerspective(t,e,i,s,r,n){const a=this.elements,o=2*r/(e-t),l=2*r/(i-s),h=(e+t)/(e-t),c=(i+s)/(i-s),u=-(n+r)/(n-r),d=-2*n*r/(n-r);return a[0]=o,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,s,r,n){const a=this.elements,o=1/(e-t),l=1/(i-s),h=1/(n-r),c=(e+t)*o,u=(i+s)*l,d=(n+r)*h;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const jt=new x,it=new L,Us=new x(0,0,0),Ns=new x(1,1,1),yt=new x,be=new x,H=new x,ji=new L,Li=new St;class le{constructor(t=0,e=0,i=0,s=le.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,r=s[0],n=s[4],a=s[8],o=s[1],l=s[5],h=s[9],c=s[2],u=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(Y(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-n,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Y(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(Y(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-n,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-Y(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-n,l));break;case"YZX":this._z=Math.asin(Y(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Y(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return ji.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ji,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Li.setFromEuler(this),this.setFromQuaternion(Li,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}le.DefaultOrder="XYZ";le.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Gs{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Vs=0;const Ui=new x,Lt=new St,ht=new L,we=new x,Xt=new x,Ws=new x,$s=new St,Ni=new x(1,0,0),Gi=new x(0,1,0),Vi=new x(0,0,1),Ys={type:"added"},Wi={type:"removed"};class Z extends ae{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Vs++}),this.uuid=oe(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Z.DefaultUp.clone();const t=new x,e=new le,i=new St,s=new x(1,1,1);function r(){i.setFromEuler(e,!1)}function n(){e.setFromQuaternion(i,void 0,!1)}e._onChange(r),i._onChange(n),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new L},normalMatrix:{value:new vt}}),this.matrix=new L,this.matrixWorld=new L,this.matrixAutoUpdate=Z.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Z.DefaultMatrixWorldAutoUpdate,this.layers=new Gs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Lt.setFromAxisAngle(t,e),this.quaternion.multiply(Lt),this}rotateOnWorldAxis(t,e){return Lt.setFromAxisAngle(t,e),this.quaternion.premultiply(Lt),this}rotateX(t){return this.rotateOnAxis(Ni,t)}rotateY(t){return this.rotateOnAxis(Gi,t)}rotateZ(t){return this.rotateOnAxis(Vi,t)}translateOnAxis(t,e){return Ui.copy(t).applyQuaternion(this.quaternion),this.position.add(Ui.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ni,t)}translateY(t){return this.translateOnAxis(Gi,t)}translateZ(t){return this.translateOnAxis(Vi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(ht.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?we.copy(t):we.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Xt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ht.lookAt(Xt,we,this.up):ht.lookAt(we,Xt,this.up),this.quaternion.setFromRotationMatrix(ht),s&&(ht.extractRotation(s.matrixWorld),Lt.setFromRotationMatrix(ht),this.quaternion.premultiply(Lt.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Ys)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Wi)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Wi)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),ht.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),ht.multiply(t.parent.matrixWorld)),t.applyMatrix4(ht),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const n=this.children[i].getObjectByProperty(t,e);if(n!==void 0)return n}}getObjectsByProperty(t,e){let i=[];this[t]===e&&i.push(this);for(let s=0,r=this.children.length;s<r;s++){const n=this.children[s].getObjectsByProperty(t,e);n.length>0&&(i=i.concat(n))}return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xt,t,Ws),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xt,$s,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++){const r=e[i];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let r=0,n=s.length;r<n;r++){const a=s[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function r(a,o){return a[o.uuid]===void 0&&(a[o.uuid]=o.toJSON(t)),o.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const o=a.shapes;if(Array.isArray(o))for(let l=0,h=o.length;l<h;l++){const c=o[l];r(t.shapes,c)}else r(t.shapes,o)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let o=0,l=this.material.length;o<l;o++)a.push(r(t.materials,this.material[o]));s.material=a}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const o=this.animations[a];s.animations.push(r(t.animations,o))}}if(e){const a=n(t.geometries),o=n(t.materials),l=n(t.textures),h=n(t.images),c=n(t.shapes),u=n(t.skeletons),d=n(t.animations),p=n(t.nodes);a.length>0&&(i.geometries=a),o.length>0&&(i.materials=o),l.length>0&&(i.textures=l),h.length>0&&(i.images=h),c.length>0&&(i.shapes=c),u.length>0&&(i.skeletons=u),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=s,i;function n(a){const o=[];for(const l in a){const h=a[l];delete h.metadata,o.push(h)}return o}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}Z.DefaultUp=new x(0,1,0);Z.DefaultMatrixAutoUpdate=!0;Z.DefaultMatrixWorldAutoUpdate=!0;const st=new x,lt=new x,Ze=new x,ct=new x,Ut=new x,Nt=new x,$i=new x,Je=new x,Qe=new x,Ke=new x;class dt{constructor(t=new x,e=new x,i=new x){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),st.subVectors(t,e),s.cross(st);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,e,i,s,r){st.subVectors(s,e),lt.subVectors(i,e),Ze.subVectors(t,e);const n=st.dot(st),a=st.dot(lt),o=st.dot(Ze),l=lt.dot(lt),h=lt.dot(Ze),c=n*l-a*a;if(c===0)return r.set(-2,-1,-1);const u=1/c,d=(l*o-a*h)*u,p=(n*h-a*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,ct),ct.x>=0&&ct.y>=0&&ct.x+ct.y<=1}static getUV(t,e,i,s,r,n,a,o){return this.getBarycoord(t,e,i,s,ct),o.set(0,0),o.addScaledVector(r,ct.x),o.addScaledVector(n,ct.y),o.addScaledVector(a,ct.z),o}static isFrontFacing(t,e,i,s){return st.subVectors(i,e),lt.subVectors(t,e),st.cross(lt).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return st.subVectors(this.c,this.b),lt.subVectors(this.a,this.b),st.cross(lt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return dt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return dt.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,s,r){return dt.getUV(t,this.a,this.b,this.c,e,i,s,r)}containsPoint(t){return dt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return dt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,r=this.c;let n,a;Ut.subVectors(s,i),Nt.subVectors(r,i),Je.subVectors(t,i);const o=Ut.dot(Je),l=Nt.dot(Je);if(o<=0&&l<=0)return e.copy(i);Qe.subVectors(t,s);const h=Ut.dot(Qe),c=Nt.dot(Qe);if(h>=0&&c<=h)return e.copy(s);const u=o*c-h*l;if(u<=0&&o>=0&&h<=0)return n=o/(o-h),e.copy(i).addScaledVector(Ut,n);Ke.subVectors(t,r);const d=Ut.dot(Ke),p=Nt.dot(Ke);if(p>=0&&d<=p)return e.copy(r);const y=d*l-o*p;if(y<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(i).addScaledVector(Nt,a);const g=h*p-d*c;if(g<=0&&c-h>=0&&d-p>=0)return $i.subVectors(r,s),a=(c-h)/(c-h+(d-p)),e.copy(s).addScaledVector($i,a);const b=1/(g+y+u);return n=y*b,a=u*b,e.copy(i).addScaledVector(Ut,n).addScaledVector(Nt,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let qs=0;class ns extends ae{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:qs++}),this.uuid=oe(),this.name="",this.type="Material",this.blending=Ti,this.side=oi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=zs,this.blendDst=Ss,this.blendEquation=_s,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=As,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ks,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ie,this.stencilZFail=Ie,this.stencilZPass=Ie,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const s=this[e];if(s===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ti&&(i.blending=this.blending),this.side!==oi&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(r){const n=[];for(const a in r){const o=r[a];delete o.metadata,n.push(o)}return n}if(e){const r=s(t.textures),n=s(t.images);r.length>0&&(i.textures=r),n.length>0&&(i.images=n)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let r=0;r!==s;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Hs extends ns{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=is,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const B=new x,Me=new C;class Yt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=Ri,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)Me.fromBufferAttribute(this,e),Me.applyMatrix3(t),this.setXY(e,Me.x,Me.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)B.fromBufferAttribute(this,e),B.applyMatrix3(t),this.setXYZ(e,B.x,B.y,B.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)B.fromBufferAttribute(this,e),B.applyMatrix4(t),this.setXYZ(e,B.x,B.y,B.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)B.fromBufferAttribute(this,e),B.applyNormalMatrix(t),this.setXYZ(e,B.x,B.y,B.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)B.fromBufferAttribute(this,e),B.transformDirection(t),this.setXYZ(e,B.x,B.y,B.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=de(e,this.array)),e}setX(t,e){return this.normalized&&(e=q(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=de(e,this.array)),e}setY(t,e){return this.normalized&&(e=q(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=de(e,this.array)),e}setZ(t,e){return this.normalized&&(e=q(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=de(e,this.array)),e}setW(t,e){return this.normalized&&(e=q(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=q(e,this.array),i=q(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=q(e,this.array),i=q(i,this.array),s=q(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,r){return t*=this.itemSize,this.normalized&&(e=q(e,this.array),i=q(i,this.array),s=q(s,this.array),r=q(r,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Ri&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Xs extends Yt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Zs extends Yt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Ce extends Yt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Js=0;const Q=new L,ti=new Z,Gt=new x,X=new he,Zt=new he,j=new x;class ke extends ae{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Js++}),this.uuid=oe(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Rs(t)?Zs:Xs)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new vt().getNormalMatrix(t);i.applyNormalMatrix(r),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Q.makeRotationFromQuaternion(t),this.applyMatrix4(Q),this}rotateX(t){return Q.makeRotationX(t),this.applyMatrix4(Q),this}rotateY(t){return Q.makeRotationY(t),this.applyMatrix4(Q),this}rotateZ(t){return Q.makeRotationZ(t),this.applyMatrix4(Q),this}translate(t,e,i){return Q.makeTranslation(t,e,i),this.applyMatrix4(Q),this}scale(t,e,i){return Q.makeScale(t,e,i),this.applyMatrix4(Q),this}lookAt(t){return ti.lookAt(t),ti.updateMatrix(),this.applyMatrix4(ti.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Gt).negate(),this.translate(Gt.x,Gt.y,Gt.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const r=t[i];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Ce(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new he);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const r=e[i];X.setFromBufferAttribute(r),this.morphTargetsRelative?(j.addVectors(this.boundingBox.min,X.min),this.boundingBox.expandByPoint(j),j.addVectors(this.boundingBox.max,X.max),this.boundingBox.expandByPoint(j)):(this.boundingBox.expandByPoint(X.min),this.boundingBox.expandByPoint(X.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ui);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new x,1/0);return}if(t){const i=this.boundingSphere.center;if(X.setFromBufferAttribute(t),e)for(let r=0,n=e.length;r<n;r++){const a=e[r];Zt.setFromBufferAttribute(a),this.morphTargetsRelative?(j.addVectors(X.min,Zt.min),X.expandByPoint(j),j.addVectors(X.max,Zt.max),X.expandByPoint(j)):(X.expandByPoint(Zt.min),X.expandByPoint(Zt.max))}X.getCenter(i);let s=0;for(let r=0,n=t.count;r<n;r++)j.fromBufferAttribute(t,r),s=Math.max(s,i.distanceToSquared(j));if(e)for(let r=0,n=e.length;r<n;r++){const a=e[r],o=this.morphTargetsRelative;for(let l=0,h=a.count;l<h;l++)j.fromBufferAttribute(a,l),o&&(Gt.fromBufferAttribute(t,l),j.add(Gt)),s=Math.max(s,i.distanceToSquared(j))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.array,s=e.position.array,r=e.normal.array,n=e.uv.array,a=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Yt(new Float32Array(4*a),4));const o=this.getAttribute("tangent").array,l=[],h=[];for(let P=0;P<a;P++)l[P]=new x,h[P]=new x;const c=new x,u=new x,d=new x,p=new C,y=new C,g=new C,b=new x,M=new x;function _(P,k,R){c.fromArray(s,P*3),u.fromArray(s,k*3),d.fromArray(s,R*3),p.fromArray(n,P*2),y.fromArray(n,k*2),g.fromArray(n,R*2),u.sub(c),d.sub(c),y.sub(p),g.sub(p);const T=1/(y.x*g.y-g.x*y.y);isFinite(T)&&(b.copy(u).multiplyScalar(g.y).addScaledVector(d,-y.y).multiplyScalar(T),M.copy(d).multiplyScalar(y.x).addScaledVector(u,-g.x).multiplyScalar(T),l[P].add(b),l[k].add(b),l[R].add(b),h[P].add(M),h[k].add(M),h[R].add(M))}let z=this.groups;z.length===0&&(z=[{start:0,count:i.length}]);for(let P=0,k=z.length;P<k;++P){const R=z[P],T=R.start,J=R.count;for(let O=T,K=T+J;O<K;O+=3)_(i[O+0],i[O+1],i[O+2])}const w=new x,F=new x,v=new x,V=new x;function $(P){v.fromArray(r,P*3),V.copy(v);const k=l[P];w.copy(k),w.sub(v.multiplyScalar(v.dot(k))).normalize(),F.crossVectors(V,k);const T=F.dot(h[P])<0?-1:1;o[P*4]=w.x,o[P*4+1]=w.y,o[P*4+2]=w.z,o[P*4+3]=T}for(let P=0,k=z.length;P<k;++P){const R=z[P],T=R.start,J=R.count;for(let O=T,K=T+J;O<K;O+=3)$(i[O+0]),$(i[O+1]),$(i[O+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Yt(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let u=0,d=i.count;u<d;u++)i.setXYZ(u,0,0,0);const s=new x,r=new x,n=new x,a=new x,o=new x,l=new x,h=new x,c=new x;if(t)for(let u=0,d=t.count;u<d;u+=3){const p=t.getX(u+0),y=t.getX(u+1),g=t.getX(u+2);s.fromBufferAttribute(e,p),r.fromBufferAttribute(e,y),n.fromBufferAttribute(e,g),h.subVectors(n,r),c.subVectors(s,r),h.cross(c),a.fromBufferAttribute(i,p),o.fromBufferAttribute(i,y),l.fromBufferAttribute(i,g),a.add(h),o.add(h),l.add(h),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(y,o.x,o.y,o.z),i.setXYZ(g,l.x,l.y,l.z)}else for(let u=0,d=e.count;u<d;u+=3)s.fromBufferAttribute(e,u+0),r.fromBufferAttribute(e,u+1),n.fromBufferAttribute(e,u+2),h.subVectors(n,r),c.subVectors(s,r),h.cross(c),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)j.fromBufferAttribute(t,e),j.normalize(),t.setXYZ(e,j.x,j.y,j.z)}toNonIndexed(){function t(a,o){const l=a.array,h=a.itemSize,c=a.normalized,u=new l.constructor(o.length*h);let d=0,p=0;for(let y=0,g=o.length;y<g;y++){a.isInterleavedBufferAttribute?d=o[y]*a.data.stride+a.offset:d=o[y]*h;for(let b=0;b<h;b++)u[p++]=l[d++]}return new Yt(u,h,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ke,i=this.index.array,s=this.attributes;for(const a in s){const o=s[a],l=t(o,i);e.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const o=[],l=r[a];for(let h=0,c=l.length;h<c;h++){const u=l[h],d=t(u,i);o.push(d)}e.morphAttributes[a]=o}e.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let a=0,o=n.length;a<o;a++){const l=n[a];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const o=this.parameters;for(const l in o)o[l]!==void 0&&(t[l]=o[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const o in i){const l=i[o];t.data.attributes[o]=l.toJSON(t.data)}const s={};let r=!1;for(const o in this.morphAttributes){const l=this.morphAttributes[o],h=[];for(let c=0,u=l.length;c<u;c++){const d=l[c];h.push(d.toJSON(t.data))}h.length>0&&(s[o]=h,r=!0)}r&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;n.length>0&&(t.data.groups=JSON.parse(JSON.stringify(n)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const l in s){const h=s[l];this.setAttribute(l,h.clone(e))}const r=t.morphAttributes;for(const l in r){const h=[],c=r[l];for(let u=0,d=c.length;u<d;u++)h.push(c[u].clone(e));this.morphAttributes[l]=h}this.morphTargetsRelative=t.morphTargetsRelative;const n=t.groups;for(let l=0,h=n.length;l<h;l++){const c=n[l];this.addGroup(c.start,c.count,c.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const o=t.boundingSphere;return o!==null&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Yi=new L,Vt=new Ls,ei=new ui,Jt=new x,Qt=new x,Kt=new x,ii=new x,_e=new x,ze=new C,Se=new C,Ae=new C,si=new x,ve=new x;class Qs extends Z{constructor(t=new ke,e=new Hs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,n=s.length;r<n;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,r=i.morphAttributes.position,n=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const a=this.morphTargetInfluences;if(r&&a){_e.set(0,0,0);for(let o=0,l=r.length;o<l;o++){const h=a[o],c=r[o];h!==0&&(ii.fromBufferAttribute(c,t),n?_e.addScaledVector(ii,h):_e.addScaledVector(ii.sub(e),h))}e.add(_e)}return this.isSkinnedMesh&&this.boneTransform(t,e),e}raycast(t,e){const i=this.geometry,s=this.material,r=this.matrixWorld;if(s===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),ei.copy(i.boundingSphere),ei.applyMatrix4(r),t.ray.intersectsSphere(ei)===!1)||(Yi.copy(r).invert(),Vt.copy(t.ray).applyMatrix4(Yi),i.boundingBox!==null&&Vt.intersectsBox(i.boundingBox)===!1))return;let n;const a=i.index,o=i.attributes.position,l=i.attributes.uv,h=i.attributes.uv2,c=i.groups,u=i.drawRange;if(a!==null)if(Array.isArray(s))for(let d=0,p=c.length;d<p;d++){const y=c[d],g=s[y.materialIndex],b=Math.max(y.start,u.start),M=Math.min(a.count,Math.min(y.start+y.count,u.start+u.count));for(let _=b,z=M;_<z;_+=3){const w=a.getX(_),F=a.getX(_+1),v=a.getX(_+2);n=Fe(this,g,t,Vt,l,h,w,F,v),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=y.materialIndex,e.push(n))}}else{const d=Math.max(0,u.start),p=Math.min(a.count,u.start+u.count);for(let y=d,g=p;y<g;y+=3){const b=a.getX(y),M=a.getX(y+1),_=a.getX(y+2);n=Fe(this,s,t,Vt,l,h,b,M,_),n&&(n.faceIndex=Math.floor(y/3),e.push(n))}}else if(o!==void 0)if(Array.isArray(s))for(let d=0,p=c.length;d<p;d++){const y=c[d],g=s[y.materialIndex],b=Math.max(y.start,u.start),M=Math.min(o.count,Math.min(y.start+y.count,u.start+u.count));for(let _=b,z=M;_<z;_+=3){const w=_,F=_+1,v=_+2;n=Fe(this,g,t,Vt,l,h,w,F,v),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=y.materialIndex,e.push(n))}}else{const d=Math.max(0,u.start),p=Math.min(o.count,u.start+u.count);for(let y=d,g=p;y<g;y+=3){const b=y,M=y+1,_=y+2;n=Fe(this,s,t,Vt,l,h,b,M,_),n&&(n.faceIndex=Math.floor(y/3),e.push(n))}}}}function Ks(f,t,e,i,s,r,n,a){let o;if(t.side===Ms?o=i.intersectTriangle(n,r,s,!0,a):o=i.intersectTriangle(s,r,n,t.side===oi,a),o===null)return null;ve.copy(a),ve.applyMatrix4(f.matrixWorld);const l=e.ray.origin.distanceTo(ve);return l<e.near||l>e.far?null:{distance:l,point:ve.clone(),object:f}}function Fe(f,t,e,i,s,r,n,a,o){f.getVertexPosition(n,Jt),f.getVertexPosition(a,Qt),f.getVertexPosition(o,Kt);const l=Ks(f,t,e,i,Jt,Qt,Kt,si);if(l){s&&(ze.fromBufferAttribute(s,n),Se.fromBufferAttribute(s,a),Ae.fromBufferAttribute(s,o),l.uv=dt.getUV(si,Jt,Qt,Kt,ze,Se,Ae,new C)),r&&(ze.fromBufferAttribute(r,n),Se.fromBufferAttribute(r,a),Ae.fromBufferAttribute(r,o),l.uv2=dt.getUV(si,Jt,Qt,Kt,ze,Se,Ae,new C));const h={a:n,b:a,c:o,normal:new x,materialIndex:0};dt.getNormal(Jt,Qt,Kt,h.normal),l.face=h}return l}class as extends Z{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new L,this.projectionMatrix=new L,this.projectionMatrixInverse=new L}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class tr extends as{constructor(t=50,e=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Oi*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(De*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Oi*2*Math.atan(Math.tan(De*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,s,r,n){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=n,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(De*.5*this.fov)/this.zoom,i=2*e,s=this.aspect*i,r=-.5*s;const n=this.view;if(this.view!==null&&this.view.enabled){const o=n.fullWidth,l=n.fullHeight;r+=n.offsetX*s/o,e-=n.offsetY*i/l,s*=n.width/o,i*=n.height/l}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ri=new x,er=new x,ir=new vt;class Wt{constructor(t=new x(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,s){return this.normal.set(t,e,i),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const s=ri.subVectors(i,e).cross(er.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const i=t.delta(ri),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:e.copy(i).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||ir.getNormalMatrix(t),s=this.coplanarPoint(ri).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const $t=new ui,Ee=new x;class os{constructor(t=new Wt,e=new Wt,i=new Wt,s=new Wt,r=new Wt,n=new Wt){this.planes=[t,e,i,s,r,n]}set(t,e,i,s,r,n){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(s),a[4].copy(r),a[5].copy(n),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,i=t.elements,s=i[0],r=i[1],n=i[2],a=i[3],o=i[4],l=i[5],h=i[6],c=i[7],u=i[8],d=i[9],p=i[10],y=i[11],g=i[12],b=i[13],M=i[14],_=i[15];return e[0].setComponents(a-s,c-o,y-u,_-g).normalize(),e[1].setComponents(a+s,c+o,y+u,_+g).normalize(),e[2].setComponents(a+r,c+l,y+d,_+b).normalize(),e[3].setComponents(a-r,c-l,y-d,_-b).normalize(),e[4].setComponents(a-n,c-h,y-p,_-M).normalize(),e[5].setComponents(a+n,c+h,y+p,_+M).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),$t.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere($t)}intersectsSprite(t){return $t.center.set(0,0,0),$t.radius=.7071067811865476,$t.applyMatrix4(t.matrixWorld),this.intersectsSphere($t)}intersectsSphere(t){const e=this.planes,i=t.center,s=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(i)<s)return!1;return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const s=e[i];if(Ee.x=s.normal.x>0?t.max.x:t.min.x,Ee.y=s.normal.y>0?t.max.y:t.min.y,Ee.z=s.normal.z>0?t.max.z:t.min.z,s.distanceToPoint(Ee)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class sr extends as{constructor(t=-1,e=1,i=1,s=-1,r=.1,n=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=s,this.near=r,this.far=n,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,i,s,r,n){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=n,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=i-t,n=i+t,a=s+e,o=s-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,n=r+l*this.view.width,a-=h*this.view.offsetY,o=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,n,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class di extends ke{constructor(t=1,e=32,i=16,s=0,r=Math.PI*2,n=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:s,phiLength:r,thetaStart:n,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const o=Math.min(n+a,Math.PI);let l=0;const h=[],c=new x,u=new x,d=[],p=[],y=[],g=[];for(let b=0;b<=i;b++){const M=[],_=b/i;let z=0;b==0&&n==0?z=.5/e:b==i&&o==Math.PI&&(z=-.5/e);for(let w=0;w<=e;w++){const F=w/e;c.x=-t*Math.cos(s+F*r)*Math.sin(n+_*a),c.y=t*Math.cos(n+_*a),c.z=t*Math.sin(s+F*r)*Math.sin(n+_*a),p.push(c.x,c.y,c.z),u.copy(c).normalize(),y.push(u.x,u.y,u.z),g.push(F+z,1-_),M.push(l++)}h.push(M)}for(let b=0;b<i;b++)for(let M=0;M<e;M++){const _=h[b][M+1],z=h[b][M],w=h[b+1][M],F=h[b+1][M+1];(b!==0||n>0)&&d.push(_,z,F),(b!==i-1||o<Math.PI)&&d.push(z,w,F)}this.setIndex(d),this.setAttribute("position",new Ce(p,3)),this.setAttribute("normal",new Ce(y,3)),this.setAttribute("uv",new Ce(g,2))}static fromJSON(t){return new di(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class rr extends ns{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new C(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=is,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class nr extends Z{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new ne(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const ni=new L,qi=new x,Hi=new x;class ar{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new C(512,512),this.map=null,this.mapPass=null,this.matrix=new L,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new os,this._frameExtents=new C(1,1),this._viewportCount=1,this._viewports=[new ci(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;qi.setFromMatrixPosition(t.matrixWorld),e.position.copy(qi),Hi.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Hi),e.updateMatrixWorld(),ni.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ni),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(ni)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class or extends ar{constructor(){super(new sr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class hr extends nr{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Z.DefaultUp),this.updateMatrix(),this.target=new Z,this.shadow=new or}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Xi{constructor(t=1,e=0,i=0){return this.radius=t,this.phi=e,this.theta=i,this}set(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(Y(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:es}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=es);const Zi={type:"change"},ai={type:"start"},Ji={type:"end"};class lr extends ae{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new x,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:kt.ROTATE,MIDDLE:kt.DOLLY,RIGHT:kt.PAN},this.touches={ONE:Bt.ROTATE,TWO:Bt.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(m){m.addEventListener("keydown",vi),this._domElementKeyEvents=m},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(Zi),i.update(),r=s.NONE},this.update=function(){const m=new x,S=new St().setFromUnitVectors(t.up,new x(0,1,0)),D=S.clone().invert(),U=new x,tt=new St,Tt=2*Math.PI;return function(){const Ci=i.object.position;m.copy(Ci).sub(i.target),m.applyQuaternion(S),a.setFromVector3(m),i.autoRotate&&r===s.NONE&&$(v()),i.enableDamping?(a.theta+=o.theta*i.dampingFactor,a.phi+=o.phi*i.dampingFactor):(a.theta+=o.theta,a.phi+=o.phi);let rt=i.minAzimuthAngle,nt=i.maxAzimuthAngle;return isFinite(rt)&&isFinite(nt)&&(rt<-Math.PI?rt+=Tt:rt>Math.PI&&(rt-=Tt),nt<-Math.PI?nt+=Tt:nt>Math.PI&&(nt-=Tt),rt<=nt?a.theta=Math.max(rt,Math.min(nt,a.theta)):a.theta=a.theta>(rt+nt)/2?Math.max(rt,a.theta):Math.min(nt,a.theta)),a.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=l,a.radius=Math.max(i.minDistance,Math.min(i.maxDistance,a.radius)),i.enableDamping===!0?i.target.addScaledVector(h,i.dampingFactor):i.target.add(h),m.setFromSpherical(a),m.applyQuaternion(D),Ci.copy(i.target).add(m),i.object.lookAt(i.target),i.enableDamping===!0?(o.theta*=1-i.dampingFactor,o.phi*=1-i.dampingFactor,h.multiplyScalar(1-i.dampingFactor)):(o.set(0,0,0),h.set(0,0,0)),l=1,c||U.distanceToSquared(i.object.position)>n||8*(1-tt.dot(i.object.quaternion))>n?(i.dispatchEvent(Zi),U.copy(i.object.position),tt.copy(i.object.quaternion),c=!1,!0):!1}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",Fi),i.domElement.removeEventListener("pointerdown",zi),i.domElement.removeEventListener("pointercancel",Si),i.domElement.removeEventListener("wheel",Ai),i.domElement.removeEventListener("pointermove",Be),i.domElement.removeEventListener("pointerup",Re),i._domElementKeyEvents!==null&&i._domElementKeyEvents.removeEventListener("keydown",vi)};const i=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=s.NONE;const n=1e-6,a=new Xi,o=new Xi;let l=1;const h=new x;let c=!1;const u=new C,d=new C,p=new C,y=new C,g=new C,b=new C,M=new C,_=new C,z=new C,w=[],F={};function v(){return 2*Math.PI/60/60*i.autoRotateSpeed}function V(){return Math.pow(.95,i.zoomSpeed)}function $(m){o.theta-=m}function P(m){o.phi-=m}const k=function(){const m=new x;return function(D,U){m.setFromMatrixColumn(U,0),m.multiplyScalar(-D),h.add(m)}}(),R=function(){const m=new x;return function(D,U){i.screenSpacePanning===!0?m.setFromMatrixColumn(U,1):(m.setFromMatrixColumn(U,0),m.crossVectors(i.object.up,m)),m.multiplyScalar(D),h.add(m)}}(),T=function(){const m=new x;return function(D,U){const tt=i.domElement;if(i.object.isPerspectiveCamera){const Tt=i.object.position;m.copy(Tt).sub(i.target);let ce=m.length();ce*=Math.tan(i.object.fov/2*Math.PI/180),k(2*D*ce/tt.clientHeight,i.object.matrix),R(2*U*ce/tt.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(k(D*(i.object.right-i.object.left)/i.object.zoom/tt.clientWidth,i.object.matrix),R(U*(i.object.top-i.object.bottom)/i.object.zoom/tt.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function J(m){i.object.isPerspectiveCamera?l/=m:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*m)),i.object.updateProjectionMatrix(),c=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function O(m){i.object.isPerspectiveCamera?l*=m:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/m)),i.object.updateProjectionMatrix(),c=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function K(m){u.set(m.clientX,m.clientY)}function Ft(m){M.set(m.clientX,m.clientY)}function gt(m){y.set(m.clientX,m.clientY)}function Et(m){d.set(m.clientX,m.clientY),p.subVectors(d,u).multiplyScalar(i.rotateSpeed);const S=i.domElement;$(2*Math.PI*p.x/S.clientHeight),P(2*Math.PI*p.y/S.clientHeight),u.copy(d),i.update()}function Pt(m){_.set(m.clientX,m.clientY),z.subVectors(_,M),z.y>0?J(V()):z.y<0&&O(V()),M.copy(_),i.update()}function Ct(m){g.set(m.clientX,m.clientY),b.subVectors(g,y).multiplyScalar(i.panSpeed),T(b.x,b.y),y.copy(g),i.update()}function hs(m){m.deltaY<0?O(V()):m.deltaY>0&&J(V()),i.update()}function ls(m){let S=!1;switch(m.code){case i.keys.UP:m.ctrlKey||m.metaKey||m.shiftKey?P(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):T(0,i.keyPanSpeed),S=!0;break;case i.keys.BOTTOM:m.ctrlKey||m.metaKey||m.shiftKey?P(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):T(0,-i.keyPanSpeed),S=!0;break;case i.keys.LEFT:m.ctrlKey||m.metaKey||m.shiftKey?$(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):T(i.keyPanSpeed,0),S=!0;break;case i.keys.RIGHT:m.ctrlKey||m.metaKey||m.shiftKey?$(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):T(-i.keyPanSpeed,0),S=!0;break}S&&(m.preventDefault(),i.update())}function xi(){if(w.length===1)u.set(w[0].pageX,w[0].pageY);else{const m=.5*(w[0].pageX+w[1].pageX),S=.5*(w[0].pageY+w[1].pageY);u.set(m,S)}}function gi(){if(w.length===1)y.set(w[0].pageX,w[0].pageY);else{const m=.5*(w[0].pageX+w[1].pageX),S=.5*(w[0].pageY+w[1].pageY);y.set(m,S)}}function bi(){const m=w[0].pageX-w[1].pageX,S=w[0].pageY-w[1].pageY,D=Math.sqrt(m*m+S*S);M.set(0,D)}function cs(){i.enableZoom&&bi(),i.enablePan&&gi()}function us(){i.enableZoom&&bi(),i.enableRotate&&xi()}function wi(m){if(w.length==1)d.set(m.pageX,m.pageY);else{const D=Oe(m),U=.5*(m.pageX+D.x),tt=.5*(m.pageY+D.y);d.set(U,tt)}p.subVectors(d,u).multiplyScalar(i.rotateSpeed);const S=i.domElement;$(2*Math.PI*p.x/S.clientHeight),P(2*Math.PI*p.y/S.clientHeight),u.copy(d)}function Mi(m){if(w.length===1)g.set(m.pageX,m.pageY);else{const S=Oe(m),D=.5*(m.pageX+S.x),U=.5*(m.pageY+S.y);g.set(D,U)}b.subVectors(g,y).multiplyScalar(i.panSpeed),T(b.x,b.y),y.copy(g)}function _i(m){const S=Oe(m),D=m.pageX-S.x,U=m.pageY-S.y,tt=Math.sqrt(D*D+U*U);_.set(0,tt),z.set(0,Math.pow(_.y/M.y,i.zoomSpeed)),J(z.y),M.copy(_)}function ds(m){i.enableZoom&&_i(m),i.enablePan&&Mi(m)}function ps(m){i.enableZoom&&_i(m),i.enableRotate&&wi(m)}function zi(m){i.enabled!==!1&&(w.length===0&&(i.domElement.setPointerCapture(m.pointerId),i.domElement.addEventListener("pointermove",Be),i.domElement.addEventListener("pointerup",Re)),gs(m),m.pointerType==="touch"?ys(m):ms(m))}function Be(m){i.enabled!==!1&&(m.pointerType==="touch"?xs(m):fs(m))}function Re(m){Ei(m),w.length===0&&(i.domElement.releasePointerCapture(m.pointerId),i.domElement.removeEventListener("pointermove",Be),i.domElement.removeEventListener("pointerup",Re)),i.dispatchEvent(Ji),r=s.NONE}function Si(m){Ei(m)}function ms(m){let S;switch(m.button){case 0:S=i.mouseButtons.LEFT;break;case 1:S=i.mouseButtons.MIDDLE;break;case 2:S=i.mouseButtons.RIGHT;break;default:S=-1}switch(S){case kt.DOLLY:if(i.enableZoom===!1)return;Ft(m),r=s.DOLLY;break;case kt.ROTATE:if(m.ctrlKey||m.metaKey||m.shiftKey){if(i.enablePan===!1)return;gt(m),r=s.PAN}else{if(i.enableRotate===!1)return;K(m),r=s.ROTATE}break;case kt.PAN:if(m.ctrlKey||m.metaKey||m.shiftKey){if(i.enableRotate===!1)return;K(m),r=s.ROTATE}else{if(i.enablePan===!1)return;gt(m),r=s.PAN}break;default:r=s.NONE}r!==s.NONE&&i.dispatchEvent(ai)}function fs(m){switch(r){case s.ROTATE:if(i.enableRotate===!1)return;Et(m);break;case s.DOLLY:if(i.enableZoom===!1)return;Pt(m);break;case s.PAN:if(i.enablePan===!1)return;Ct(m);break}}function Ai(m){i.enabled===!1||i.enableZoom===!1||r!==s.NONE||(m.preventDefault(),i.dispatchEvent(ai),hs(m),i.dispatchEvent(Ji))}function vi(m){i.enabled===!1||i.enablePan===!1||ls(m)}function ys(m){switch(Pi(m),w.length){case 1:switch(i.touches.ONE){case Bt.ROTATE:if(i.enableRotate===!1)return;xi(),r=s.TOUCH_ROTATE;break;case Bt.PAN:if(i.enablePan===!1)return;gi(),r=s.TOUCH_PAN;break;default:r=s.NONE}break;case 2:switch(i.touches.TWO){case Bt.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;cs(),r=s.TOUCH_DOLLY_PAN;break;case Bt.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;us(),r=s.TOUCH_DOLLY_ROTATE;break;default:r=s.NONE}break;default:r=s.NONE}r!==s.NONE&&i.dispatchEvent(ai)}function xs(m){switch(Pi(m),r){case s.TOUCH_ROTATE:if(i.enableRotate===!1)return;wi(m),i.update();break;case s.TOUCH_PAN:if(i.enablePan===!1)return;Mi(m),i.update();break;case s.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;ds(m),i.update();break;case s.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;ps(m),i.update();break;default:r=s.NONE}}function Fi(m){i.enabled!==!1&&m.preventDefault()}function gs(m){w.push(m)}function Ei(m){delete F[m.pointerId];for(let S=0;S<w.length;S++)if(w[S].pointerId==m.pointerId){w.splice(S,1);return}}function Pi(m){let S=F[m.pointerId];S===void 0&&(S=new C,F[m.pointerId]=S),S.set(m.pageX,m.pageY)}function Oe(m){const S=m.pointerId===w[0].pointerId?w[1]:w[0];return F[S.pointerId]}i.domElement.addEventListener("contextmenu",Fi),i.domElement.addEventListener("pointerdown",zi),i.domElement.addEventListener("pointercancel",Si),i.domElement.addEventListener("wheel",Ai,{passive:!1}),this.update()}}const xt={index:{label:"Index Buffer",cpuFormat:"[object Uint16Array]",usage:GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST},position:{label:"Position Vertex Buffer",cpuFormat:"[object Float32Array]",gpuFormat:"float32x3",usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,stride:3*4},normal:{label:"Normal Vertex Buffer",cpuFormat:"[object Float32Array]",gpuFormat:"float32x3",usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,stride:3*4},color:{label:"Color Vertex Buffer",cpuFormat:"[object Float32Array]",gpuFormat:"float32x4",usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,stride:4*4},uv:{label:"UV Vertex Buffer",cpuFormat:"[object Float32Array]",gpuFormat:"float32x2",usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,stride:2*4}};class cr{constructor(){}createLayout(t){let e=[],i=0;for(let s of t)if(s!=="index"){if(!xt[s])throw new Error(`Vertex Buffer Attribute Not Exist: ${s}`);e.push({arrayStride:xt[s].stride,attributes:[{shaderLocation:i,offset:0,format:xt[s].gpuFormat}]}),i++}return e}createResource(t,e){let i={};for(const s of t){if(!xt[s])throw new Error(`Vertex Buffer Attribute Not Exist: ${s}`);if(!e[s])throw new Error(`${s} Needs Copy Data`);if(Object.prototype.toString.call(e[s])!=xt[s].cpuFormat)throw new Error(`Invalide Type of Vertex Buffer Attribute '${s}'. Should Be ${xt[s].cpuFormat}, But Got ${Object.prototype.toString.call(e[s])}.`);e[s].byteLength%4!=0&&(e[s]=new Uint16Array([...e[s],0]));const r=E.createBuffer({label:xt[s].label,usage:xt[s].usage,size:e[s].byteLength});E.queue.writeBuffer(r,0,e[s]),i[s]=r}return i}}const re=class{constructor(){A(this,"resources");this.resources=new WeakMap}static RegisterFormats(t){for(const e in t){if(re.Formats[e])throw new Error(`Resource Format ${e} has already Registered!`);re.Formats[e]=t[e]}}async toBitmap(t){return t instanceof ImageBitmap?t:await createImageBitmap(t)}toBitmaps(t){let e=[];return t.forEach(i=>{e.push(this.toBitmap(i))}),Promise.all(e)}async createResource(t,e){var s;let i={};for(const r of t){const n=re.Formats[r];if(!n)throw new Error(`Resource Attribute Not Exist: ${r}`);switch(n.type){case"buffer":{const a=e[r];let o=this.resources.get(a==null?void 0:a.value);o||(o=E.createBuffer({label:n.label,size:((s=a==null?void 0:a.value)==null?void 0:s.byteLength)||(a==null?void 0:a.size)||n.size,usage:n.usage}),a!=null&&a.value&&(E.queue.writeBuffer(o,0,a==null?void 0:a.value),this.resources.set(a==null?void 0:a.value,o))),i[r]=o;break}case"sampler":{let a=this.resources.get(n);a||(a=E.createSampler({label:n.label,magFilter:n.magFilter||"linear",minFilter:n.minFilter||"linear",mipmapFilter:n.mipmapFilter||"linear",compare:n.compare||void 0}),this.resources.set(n,a)),i[r]=a;break}case"texture":{const a=e[r];let o=this.resources.get(a==null?void 0:a.value);if(o)i[r]=o;else{const l=a==null?void 0:a.value,h=l?[l.width,l.height]:(a==null?void 0:a.size)||n.size;let c={label:n.label,size:h,mipLevelCount:n.mipLevelCount||1,dimension:n.dimension||"2d",format:n.format,usage:n.usage};n.viewFormat&&(c.viewFormats=[n.viewFormat]),o=E.createTexture(c),l&&(E.queue.copyExternalImageToTexture({source:l,flipY:(a==null?void 0:a.flipY)||!1},{texture:o},h),this.resources.set(l,o)),i[r]=o}break}case"cube-texture":{const a=e[r];if(a!=null&&a.value){if(a.value.length!=6)throw new Error("Array Length of cube-texture is Not 6")}else if(a!=null&&a.size&&a.size[2]!=6)throw new Error("Array Length of cube-texture is Not 6")}case"texture-array":{const a=e[r];let o=this.resources.get(a==null?void 0:a.value);if(o)i[r]=o;else{const l=a==null?void 0:a.value,h=l?[l[0].width,l[0].height,l.length]:(a==null?void 0:a.size)||n.size;let c={label:n.label,size:h,mipLevelCount:n.mipLevelCount||1,dimension:n.dimension||"2d",format:n.format,usage:n.usage};if(n.viewFormat&&(c.viewFormats=[n.viewFormat]),o=E.createTexture(c),l){for(let u=0;u<l.length;u++)E.queue.copyExternalImageToTexture({source:l[u],flipY:(a==null?void 0:a.flipY[u])||!1},{texture:o,origin:[0,0,u]},[h[0],h[1],1]);this.resources.set(l,o)}i[r]=o}break}default:throw new Error("Resource Type Not Support")}}return i}};let N=re;A(N,"Formats",{});class ur{constructor(){}createLayout(t){let e=[],i=0;for(const s of t){if(!N.Formats[s])throw new Error(`Resource Attribute Not Exist: ${s}`);switch(N.Formats[s].type){case"buffer":{e.push({binding:i,visibility:N.Formats[s].visibility,buffer:N.Formats[s].layout});break}case"sampler":{e.push({binding:i,visibility:N.Formats[s].visibility,sampler:N.Formats[s].layout});break}case"texture":case"texture-array":case"cube-texture":{e.push({binding:i,visibility:N.Formats[s].visibility,texture:N.Formats[s].layout});break}default:throw new Error("Resource Type Not Support")}i++}return E.createBindGroupLayout({entries:e})}create(t,e,i=null,s=void 0){let r;i?r=i:r=this.createLayout(t);let n=[],a=0;for(const h of t){const c=N.Formats[h];if(!c)throw new Error(`Resource Attribute Not Exist: ${h}`);if(!e[h])throw new Error(`Resource '${h}' Not Exist`);switch(c.type){case"buffer":{n.push({binding:a,resource:{buffer:e[h]}});break}case"sampler":{n.push({binding:a,resource:e[h]});break}case"texture":case"texture-array":case"cube-texture":{n.push({binding:a,resource:e[h].createView({format:c.viewFormat||c.format,dimension:c.layout.viewDimension||"2d"})});break}default:throw new Error("Resource Type Not Support")}a++}let o;s?o={label:s,layout:r,entries:n}:o={layout:r,entries:n};let l=E.createBindGroup(o);return{layout:r,group:l}}}const Qi=new cr,pi=new N,dr=new ur;class Ki{constructor(t,e){A(this,"camera");A(this,"light");A(this,"resourceAttributes");A(this,"resourceCPUData");A(this,"resource");this.camera=t,this.light=e}static RegisterResourceFormats(){N.RegisterFormats({renderDepthMap:{type:"texture",label:"Render Depth Map",usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,size:[li.width,li.height],dimension:"2d",format:"depth32float"},camera:{type:"buffer",label:"Camera Structure",visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,layout:{type:"uniform"}},directionalLight:{type:"buffer",label:"Directional Light Structure",visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,layout:{type:"uniform"}}})}async initResource(){this.resourceAttributes=["renderDepthMap","camera","directionalLight"];const t=this.light;let e=t.position.clone().sub(t.target.position).normalize(),i=new x(...this.light.color.toArray()).setScalar(this.light.intensity);this.resourceCPUData={camera:{value:new Float32Array((4+16+16)*4)},directionalLight:{value:new Float32Array([...e.toArray(),0,...i.toArray(),0])}},this.resource=await pi.createResource(this.resourceAttributes,this.resourceCPUData)}update(){this.camera.position.setFromMatrixPosition(this.camera.matrixWorld);const t=this.resourceCPUData.camera;t.value.set([...this.camera.position.toArray(),0,...this.camera.matrixWorldInverse.toArray(),...this.camera.projectionMatrix.toArray()]),E.queue.writeBuffer(this.resource.camera,0,t.value,0)}}const pr=/#([^\s]*)(\s*)/gm;function At(f,...t){const e=[];let i={string:"",elseIsValid:!1,expression:!0},s=1;for(let r=0;r<f.length;++r){const n=f[r],a=n.matchAll(pr);let o=0,l=!1;for(const h of a){switch(i.string+=n.substring(o,h.index),h[1]){case"if":if(h.index+h[0].length!=n.length)throw new Error("#if must be immediately followed by a template expression (ie: ${value})");l=!0,e.push(i),s++,i={string:"",elseIsValid:!0,expression:!!t[r]};break;case"elif":if(h.index+h[0].length!=n.length)throw new Error("#elif must be immediately followed by a template expression (ie: ${value})");if(!i.elseIsValid)throw new Error("#elif not preceeded by an #if or #elif");l=!0,i.expression&&e.length!=s&&e.push(i),i={string:"",elseIsValid:!0,expression:!!t[r]};break;case"else":if(!i.elseIsValid)throw new Error("#else not preceeded by an #if or #elif");i.expression&&e.length!=s&&e.push(i),i={string:h[2],elseIsValid:!1,expression:!0};break;case"endif":if(!e.length)throw new Error("#endif not preceeded by an #if");const c=e.length==s?e.pop():i;i=e.pop(),s--,c.expression&&(i.string+=c.string),i.string+=h[2];break;default:i.string+=h[0];break}o=h.index+h[0].length}o!=n.length&&(i.string+=n.substring(o,n.length)),!l&&t.length>r&&(i.string+=t[r])}if(e.length)throw new Error("Mismatched #if/#endif count");return i.string}const mr=At`

struct Camera {
  position: vec3<f32>,
  viewMaterial: mat4x4<f32>,
  projectionMatrix: mat4x4<f32>
};

struct Material {
  metalness: f32,
  specularIntensity: f32,
  roughness: f32,
  color: vec3<f32>
};

struct VertexInput {
  @builtin(instance_index) instanceIndex: u32,
  @location(0) position: vec3<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) uv: vec2<f32>,
};

struct VertexOutput {
  @builtin(position) position: vec4<f32>,
  @location(0) @interpolate(perspective, center) vPosition: vec3<f32>,
  @location(1) @interpolate(perspective, center) vNormal: vec3<f32>,
  @location(2) @interpolate(perspective, center) vUv: vec2<f32>
};

@group(0) @binding(0) var<uniform> camera: Camera;
@group(0) @binding(1) var<uniform> material: Material;
@group(0) @binding(2) var<storage> instancePositions: array<vec3<f32>>;

@vertex
fn main(input: VertexInput) -> VertexOutput {
  let positionWorld = input.position +  instancePositions[input.instanceIndex];
  // let positionWorld = input.position;
  let positionScreen = camera.projectionMatrix * camera.viewMaterial * vec4<f32>(positionWorld, 1.0);
  return VertexOutput(
    positionScreen, positionWorld,
    input.normal, input.uv
  );
}

`,fr=At`

struct Camera {
  position: vec3<f32>,
  viewMaterial: mat4x4<f32>,
  projectionMatrix: mat4x4<f32>
};

struct DirectionalLight {
  direction: vec3<f32>,
  color: vec3<f32>
};

struct Material {
  metalness: f32,
  specularIntensity: f32,
  roughness: f32,
  color: vec3<f32>
};

struct FragmentInput {
  @location(0) @interpolate(perspective, center) vPosition: vec3<f32>,
  @location(1) @interpolate(perspective, center) vNormal: vec3<f32>,
  @location(2) @interpolate(perspective, center) vUv: vec2<f32>
};

@group(0) @binding(1) var<uniform> material: Material;
@group(0) @binding(3) var<uniform> light: DirectionalLight;

@fragment
fn main(input: FragmentInput) -> @location(0) vec4<f32> {
  let NoL = saturate(dot(normalize(input.vNormal), light.direction));
  let irradiance = NoL * light.color;
  let diffuse = (irradiance + 0.02) * 0.3183098861837907 * material.color; // RECIPROCAL_PI
  return vec4<f32>(pow(diffuse, vec3<f32>(0.454545)), 1.0);
}

`,mi=class{constructor(t){A(this,"mesh");A(this,"renderPipeline");A(this,"simulator");A(this,"vertexCount");A(this,"vertexBufferAttributes");A(this,"vertexBufferData");A(this,"vertexBuffers");A(this,"resourceAttributes");A(this,"resourceCPUData");A(this,"resource");this.simulator=t,this.mesh=new Qs(new di(.02,8,8),new rr({color:302836}))}static RegisterResourceFormats(){N.RegisterFormats(mi.ResourceFormats)}initVertexBuffer(){this.vertexBufferAttributes=["position","normal","uv"],this.vertexBufferData={position:this.mesh.geometry.attributes.position.array,normal:this.mesh.geometry.attributes.normal.array,uv:this.mesh.geometry.attributes.uv.array},this.mesh.geometry.index?(this.vertexBufferAttributes.push("index"),this.vertexBufferData.index=this.mesh.geometry.index.array,this.vertexCount=this.mesh.geometry.index.count):this.vertexCount=this.mesh.geometry.attributes.position.count,this.vertexBuffers=Qi.createResource(this.vertexBufferAttributes,this.vertexBufferData)}async initGroupResource(){const t=this.mesh.material;this.resourceAttributes=["material","particlePosition"],this.resourceCPUData={material:{value:new Float32Array([t.metalness,t.specularIntensity,t.roughness,0,...t.color.toArray(),0])}},this.resource=await pi.createResource(["material"],this.resourceCPUData),this.resource.particlePosition=this.simulator.particlePositionBuffer}async setRenderBundle(t,e){const i=Qi.createLayout(this.vertexBufferAttributes),s=E.createBindGroupLayout({label:"Particle Rendering Pipeline Bind Group Layout",entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:2,visibility:GPUShaderStage.VERTEX,buffer:{type:"read-only-storage"}},{binding:3,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}]}),r=E.createBindGroup({label:"Particle Rendering Pipeline Bind Group",layout:s,entries:[{binding:0,resource:{buffer:e.camera}},{binding:1,resource:{buffer:this.resource.material}},{binding:2,resource:{buffer:this.simulator.particlePositionBuffer}},{binding:3,resource:{buffer:e.directionalLight}}]});this.renderPipeline=await E.createRenderPipelineAsync({label:"Render Pipeline",layout:E.createPipelineLayout({bindGroupLayouts:[s]}),vertex:{module:E.createShaderModule({code:mr}),entryPoint:"main",buffers:i},fragment:{module:E.createShaderModule({code:fr}),entryPoint:"main",targets:[{format:Te}]},primitive:{topology:"triangle-list",cullMode:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"greater",format:"depth32float"}}),t.setPipeline(this.renderPipeline);let n=0,a=!1;for(const o of this.vertexBufferAttributes)o==="index"?(t.setIndexBuffer(this.vertexBuffers.index,"uint16"),a=!0):(t.setVertexBuffer(n,this.vertexBuffers[o]),n++);t.setBindGroup(0,r),a?t.drawIndexed(this.vertexCount,this.simulator.particleCount):t.draw(this.vertexCount,this.simulator.particleCount)}};let ee=mi;A(ee,"ResourceFormats",{material:{type:"buffer",label:"Material Structure",visibility:GPUShaderStage.FRAGMENT,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,layout:{type:"uniform"}}});const fi=class{constructor(t=1,e=25){A(this,"particleCount");A(this,"stepCount");A(this,"particlePositionBuffer");this.stepCount=e,this.particleCount=t,this.particlePositionBuffer=E.createBuffer({size:4*this.particleCount*Float32Array.BYTES_PER_ELEMENT,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST})}static RegisterResourceFormats(){N.RegisterFormats(fi.ResourceFormats)}};let ie=fi;A(ie,"ResourceFormats",{particlePosition:{type:"buffer",label:"Particle Positions",visibility:GPUShaderStage.COMPUTE,layout:{type:"storage"}}});function yr(f,t){const e=At`
  dpos = (vec3<f32>(vec3<u32>(i, j, k)) - fx) * dx;
  weight = w[i][0] * w[j][1] * w[k][2];
  i = i + base.x; j = j + base.y; k = k + base.z; 

  if ( i >= 0 && i < ${t} && j >= 0 && j < ${t} && k >= 0 && k < ${t} ) {
    let v_del = weight * (p_mass * F_v[p] + affine * dpos);
    let m_del = weight * p_mass;

    var old_val: f32; var new_val: f32;
    loop {
      let atomic_storage_ptr = &(F_grid_v[i][j][k][0]);
      old_val= bitcast<f32>(atomicLoad(atomic_storage_ptr));
      new_val = old_val + v_del.x;
      if ( 
        atomicCompareExchangeWeak(
          atomic_storage_ptr, bitcast<i32>(old_val), bitcast<i32>(new_val)
        ).exchanged
      ) { break; }
    }

    loop {
      let atomic_storage_ptr = &(F_grid_v[i][j][k][1]);
      old_val = bitcast<f32>(atomicLoad(atomic_storage_ptr));
      new_val = old_val + v_del.y;
      if ( 
        atomicCompareExchangeWeak(
          atomic_storage_ptr, bitcast<i32>(old_val), bitcast<i32>(new_val)
        ).exchanged
      ) { break; }
    }

    loop {
      let atomic_storage_ptr = &(F_grid_v[i][j][k][2]);
      old_val = bitcast<f32>(atomicLoad(atomic_storage_ptr));
      new_val = old_val + v_del.z;
      if ( 
        atomicCompareExchangeWeak(
          atomic_storage_ptr, bitcast<i32>(old_val), bitcast<i32>(new_val)
        ).exchanged
      ) { break; }
    }

    loop {
      let atomic_storage_ptr = &(F_grid_m[i][j][k]);
      old_val = bitcast<f32>(atomicLoad(atomic_storage_ptr));
      new_val = old_val + m_del;
      if ( 
        atomicCompareExchangeWeak(
          atomic_storage_ptr, bitcast<i32>(old_val), bitcast<i32>(new_val)
        ).exchanged
      ) { break; }
    }
  }
`;return At`

override dx: f32;
override dt: f32;
override p_vol: f32;
override p_mass: f32;
override E: f32;

@group(0) @binding(0) var<storage, read_write> F_x: array<vec3<f32>, ${f}>;
@group(0) @binding(1) var<storage, read_write> F_v: array<vec3<f32>, ${f}>;
@group(0) @binding(2) var<storage, read_write> F_C: array<mat3x3<f32>, ${f}>;
@group(0) @binding(3) var<storage, read_write> F_J: array<f32, ${f}>;
@group(0) @binding(4) var<storage, read_write> F_grid_v: array<array<array<array<atomic<i32>, 4>, ${t}>, ${t}>, ${t}>;
@group(0) @binding(5) var<storage, read_write> F_grid_m: array<array<array<atomic<i32>, ${t}>, ${t}>, ${t}>;
@group(0) @binding(6) var<storage, read_write> gravity: vec3<f32>;

const identity_mat3x3 = mat3x3<f32>(
  1.0, 0.0, 0.0,
  0.0, 1.0, 0.0,
  0.0, 0.0, 1.0
);

@compute @workgroup_size(16, 1, 1)
fn main(@builtin(global_invocation_id) global_index : vec3<u32>) {

  let p = global_index.x;
  if (p >= ${f}) { return; }

  let Xp = F_x[p] / dx;
  let base = vec3<u32>(Xp - 0.5);
  let fx = Xp - vec3<f32>(base);
  let w = mat3x3<f32>(
    0.5 * (1.5 - fx) * (1.5 - fx), 
    0.75 - (fx - 1.0) * (fx - 1.0), 
    0.5 * (fx - 0.5) * (fx - 0.5)
  );

  let stress = -dt * 4.0 * E * p_vol * (F_J[p] - 1.0) / (dx * dx);
  let affine = stress * identity_mat3x3 + p_mass * F_C[p];

  var i: u32; var j: u32; var k: u32;
  var weight: f32; var dpos: vec3<f32>;

  i = 0; j = 0; k = 0; ${e}
  i = 0; j = 0; k = 1; ${e}
  i = 0; j = 0; k = 2; ${e}
  i = 0; j = 1; k = 0; ${e}
  i = 0; j = 1; k = 1; ${e}
  i = 0; j = 1; k = 2; ${e}
  i = 0; j = 2; k = 0; ${e}
  i = 0; j = 2; k = 1; ${e}
  i = 0; j = 2; k = 2; ${e}
  
  i = 1; j = 0; k = 0; ${e}
  i = 1; j = 0; k = 1; ${e}
  i = 1; j = 0; k = 2; ${e}
  i = 1; j = 1; k = 0; ${e}
  i = 1; j = 1; k = 1; ${e}
  i = 1; j = 1; k = 2; ${e}
  i = 1; j = 2; k = 0; ${e}
  i = 1; j = 2; k = 1; ${e}
  i = 1; j = 2; k = 2; ${e}

  i = 2; j = 0; k = 0; ${e}
  i = 2; j = 0; k = 1; ${e}
  i = 2; j = 0; k = 2; ${e}
  i = 2; j = 1; k = 0; ${e}
  i = 2; j = 1; k = 1; ${e}
  i = 2; j = 1; k = 2; ${e}
  i = 2; j = 2; k = 0; ${e}
  i = 2; j = 2; k = 1; ${e}
  i = 2; j = 2; k = 2; ${e}

}

  `}function xr(f,t){return At`

override dt: f32;
override bound: u32;

@group(0) @binding(0) var<storage, read_write> F_x: array<vec3<f32>, ${f}>;
@group(0) @binding(1) var<storage, read_write> F_v: array<vec3<f32>, ${f}>;
@group(0) @binding(2) var<storage, read_write> F_C: array<mat3x3<f32>, ${f}>;
@group(0) @binding(3) var<storage, read_write> F_J: array<f32, ${f}>;
@group(0) @binding(4) var<storage, read_write> F_grid_v: array<array<array<vec3<f32>, ${t}>, ${t}>, ${t}>;
@group(0) @binding(5) var<storage, read_write> F_grid_m: array<array<array<f32, ${t}>, ${t}>, ${t}>;
@group(0) @binding(6) var<storage, read_write> gravity: vec3<f32>;

@compute @workgroup_size(4, 4, 4)
fn main(@builtin(global_invocation_id) global_index : vec3<u32>) {

  let i = global_index.x; let j = global_index.y; let k = global_index.z;
  if (i >= ${t} || j >= ${t} || k >= ${t}) { return; }

  // momentum -> velocity
  var velocity = vec3<f32>();
  if (F_grid_m[i][j][k] > 0.0) { 
    velocity = F_grid_v[i][j][k] / F_grid_m[i][j][k]; 
  }

  // apply gravity
  velocity = velocity + dt * gravity;

  // apply boundary condition
  let max_bound = ${t} - bound;
  if ( (i < bound && velocity.x < 0) || (i >= max_bound && velocity.x > 0) ) {
    velocity.x = 0.0;
  }
  if ( (j < bound && velocity.y < 0) || (j >= max_bound && velocity.y > 0) ) {
    velocity.y = 0.0;
  }
  if ( (k < bound && velocity.z < 0) || (k >= max_bound && velocity.z > 0) ) {
    velocity.z = 0.0;
  }

  F_grid_v[i][j][k] = velocity;

}

  `}function gr(f,t){const e=At`
  dpos = (vec3<f32>(vec3<u32>(i, j, k)) - fx) * dx;
  weight = w[i][0] * w[j][1] * w[k][2];
  i = i + base.x; j = j + base.y; k = k + base.z; 
  velocity = F_grid_v[i][j][k];
  new_v = new_v + weight * velocity;
  new_C = new_C + inv4_dx2 * weight * mat3x3<f32>(
    velocity[0] * dpos,
    velocity[1] * dpos,
    velocity[2] * dpos
  );
`;return At`

override dx: f32;
override dt: f32;

@group(0) @binding(0) var<storage, read_write> F_x: array<vec3<f32>, ${f}>;
@group(0) @binding(1) var<storage, read_write> F_v: array<vec3<f32>, ${f}>;
@group(0) @binding(2) var<storage, read_write> F_C: array<mat3x3<f32>, ${f}>;
@group(0) @binding(3) var<storage, read_write> F_J: array<f32, ${f}>;
@group(0) @binding(4) var<storage, read_write> F_grid_v: array<array<array<vec3<f32>, ${t}>, ${t}>, ${t}>;
@group(0) @binding(5) var<storage, read_write> F_grid_m: array<array<array<f32, ${t}>, ${t}>, ${t}>;
@group(0) @binding(6) var<storage, read_write> gravity: vec3<f32>;

@compute @workgroup_size(16, 1, 1)
fn main(@builtin(global_invocation_id) global_index : vec3<u32>) {

  let p = global_index.x;
  if (p >= ${f}) { return; }

  let Xp = F_x[p] / dx;
  let base = vec3<u32>(Xp - 0.5);
  let fx = Xp - vec3<f32>(base);
  let w = mat3x3<f32>(
    0.5 * (1.5 - fx) * (1.5 - fx), 
    0.75 - (fx - 1.0) * (fx - 1.0), 
    0.5 * (fx - 0.5) * (fx - 0.5)
  );

  var i: u32; var j: u32; var k: u32;
  var new_v = vec3<f32>(); var new_C = mat3x3<f32>();
  var weight: f32; var dpos: vec3<f32>;
  var velocity: vec3<f32>;
  let inv4_dx2 = 4.0 / (dx * dx);

  i = 0; j = 0; k = 0; ${e}
  i = 0; j = 0; k = 1; ${e}
  i = 0; j = 0; k = 2; ${e}
  i = 0; j = 1; k = 0; ${e}
  i = 0; j = 1; k = 1; ${e}
  i = 0; j = 1; k = 2; ${e}
  i = 0; j = 2; k = 0; ${e}
  i = 0; j = 2; k = 1; ${e}
  i = 0; j = 2; k = 2; ${e}
  
  i = 1; j = 0; k = 0; ${e}
  i = 1; j = 0; k = 1; ${e}
  i = 1; j = 0; k = 2; ${e}
  i = 1; j = 1; k = 0; ${e}
  i = 1; j = 1; k = 1; ${e}
  i = 1; j = 1; k = 2; ${e}
  i = 1; j = 2; k = 0; ${e}
  i = 1; j = 2; k = 1; ${e}
  i = 1; j = 2; k = 2; ${e}

  i = 2; j = 0; k = 0; ${e}
  i = 2; j = 0; k = 1; ${e}
  i = 2; j = 0; k = 2; ${e}
  i = 2; j = 1; k = 0; ${e}
  i = 2; j = 1; k = 1; ${e}
  i = 2; j = 1; k = 2; ${e}
  i = 2; j = 2; k = 0; ${e}
  i = 2; j = 2; k = 1; ${e}
  i = 2; j = 2; k = 2; ${e}

  F_v[p] = new_v;
  F_C[p] = new_C;
  F_x[p] = F_x[p] + dt * new_v;
  F_J[p] = F_J[p] * (1.0 + dt * (new_C[0][0] + new_C[1][1] + new_C[2][2]));

}

`}const yi=class extends ie{constructor(){super(9e3,25);A(this,"timeStep");A(this,"gridCount");A(this,"gridLength");A(this,"bound");A(this,"material");A(this,"gravityArray");A(this,"resource");A(this,"P2GComputePipeline");A(this,"GridComputePipeline");A(this,"G2PComputePipeline");A(this,"bindGroup");this.timeStep=1e-4,this.gridCount=32,this.gridLength=1/32,this.bound=3;const i=1,s=Math.pow(this.gridLength*.5,2);this.material={particleDensity:i,particleVolume:s,particleMass:i*s,E:400},this.gravityArray=new Float32Array(4)}static _RegisterResourceFormats(){N.RegisterFormats(yi._ResourceFormats)}async initResource(){this.resource=await pi.createResource(["particleVelocity","particleVelocityGradient","particlePlasticDeformation","gridVelocity","gridMass","gravity"],{particleVelocity:{size:4*this.particleCount*Float32Array.BYTES_PER_ELEMENT},particleVelocityGradient:{size:4*4*this.particleCount*Float32Array.BYTES_PER_ELEMENT},particlePlasticDeformation:{size:this.particleCount*Float32Array.BYTES_PER_ELEMENT},gridVelocity:{size:4*this.gridCount*this.gridCount*this.gridCount*Float32Array.BYTES_PER_ELEMENT},gridMass:{size:this.gridCount*this.gridCount*this.gridCount*Float32Array.BYTES_PER_ELEMENT},gravity:{size:4*Float32Array.BYTES_PER_ELEMENT}}),this.resource.particlePosition=this.particlePositionBuffer;let e=new Float32Array(4*this.particleCount),i=new Array(3).fill(0);for(let r=0;r<this.particleCount;r++)e.set(i.map(n=>Math.random()*.4+.15),r*4);E.queue.writeBuffer(this.particlePositionBuffer,0,e,0);let s=new Float32Array(this.particleCount).fill(1);E.queue.writeBuffer(this.resource.particlePlasticDeformation,0,s,0),this.gravityArray.set([0,-9.8,0,0]),E.queue.writeBuffer(this.resource.gravity,0,this.gravityArray,0)}enableInteraction(){document.addEventListener("keydown",e=>{e.key.toUpperCase()==="W"?this.gravityArray.set([-9.8,0,0,0]):e.key.toUpperCase()==="A"?this.gravityArray.set([0,0,9.8,0]):e.key.toUpperCase()==="S"?this.gravityArray.set([9.8,0,0,0]):e.key.toUpperCase()==="D"?this.gravityArray.set([0,0,-9.8,0]):e.key.toUpperCase()==="Q"?this.gravityArray.set([0,9.8,0,0]):e.key.toUpperCase()==="E"&&this.gravityArray.set([0,-9.8,0,0])})}async initP2GComputePipeline(){this.P2GComputePipeline=await E.createComputePipelineAsync({label:"MPM P2G Compute Pipeline",layout:E.createPipelineLayout({bindGroupLayouts:[this.bindGroup.layout]}),compute:{module:E.createShaderModule({code:yr(this.particleCount,this.gridCount)}),constants:{dx:this.gridLength,dt:this.timeStep,p_vol:this.material.particleVolume,p_mass:this.material.particleMass,E:this.material.E},entryPoint:"main"}})}async initGridComputePipeline(){this.GridComputePipeline=await E.createComputePipelineAsync({label:"MPM Grid Compute Pipeline",layout:E.createPipelineLayout({bindGroupLayouts:[this.bindGroup.layout]}),compute:{module:E.createShaderModule({code:xr(this.particleCount,this.gridCount)}),constants:{dt:this.timeStep,bound:this.bound},entryPoint:"main"}})}async initG2PComputePipeline(){this.G2PComputePipeline=await E.createComputePipelineAsync({label:"MPM G2P Compute Pipeline",layout:E.createPipelineLayout({bindGroupLayouts:[this.bindGroup.layout]}),compute:{module:E.createShaderModule({code:gr(this.particleCount,this.gridCount)}),constants:{dx:this.gridLength,dt:this.timeStep},entryPoint:"main"}})}async initComputePipeline(){const e=["particlePosition","particleVelocity","particleVelocityGradient","particlePlasticDeformation","gridVelocity","gridMass","gravity"];this.bindGroup=dr.create(e,this.resource),await this.initP2GComputePipeline(),await this.initGridComputePipeline(),await this.initG2PComputePipeline()}run(e){e.clearBuffer(this.resource.gridVelocity),e.clearBuffer(this.resource.gridMass);const i=e.beginComputePass();i.setPipeline(this.P2GComputePipeline),i.setBindGroup(0,this.bindGroup.group),i.dispatchWorkgroups(Math.ceil(this.particleCount/16)),i.setPipeline(this.GridComputePipeline),i.setBindGroup(0,this.bindGroup.group),i.dispatchWorkgroups(Math.ceil(this.gridCount/4),Math.ceil(this.gridCount/4),Math.ceil(this.gridCount/4)),i.setPipeline(this.G2PComputePipeline),i.setBindGroup(0,this.bindGroup.group),i.dispatchWorkgroups(Math.ceil(this.particleCount/16)),i.end()}update(){E.queue.writeBuffer(this.resource.gravity,0,this.gravityArray,0)}async debug(){await this.resource.debug.mapAsync(GPUMapMode.READ);const e=this.resource.debug.getMappedRange();console.log(e);const i=new Float32Array(e);console.log(i);for(let s=0;s<32;s++)s==15&&console.log(i.slice(s*4*32*32,(s+1)*4*32*32));this.resource.debug.unmap()}};let se=yi;A(se,"_ResourceFormats",{particleVelocity:{type:"buffer",label:"Particle Velocity",visibility:GPUShaderStage.COMPUTE,usage:GPUBufferUsage.STORAGE,layout:{type:"storage"}},particleVelocityGradient:{type:"buffer",label:"Particle Velocity Gradient",visibility:GPUShaderStage.COMPUTE,usage:GPUBufferUsage.STORAGE,layout:{type:"storage"}},particlePlasticDeformation:{type:"buffer",label:"Particle Plastic Deformation",visibility:GPUShaderStage.COMPUTE,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,layout:{type:"storage"}},gridVelocity:{type:"buffer",label:"Grid Velocity",visibility:GPUShaderStage.COMPUTE,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,layout:{type:"storage"}},gridMass:{type:"buffer",label:"Grid Mass",visibility:GPUShaderStage.COMPUTE,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,layout:{type:"storage"}},gravity:{type:"buffer",label:"Gravity",visibility:GPUShaderStage.COMPUTE,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,layout:{type:"storage"}},debug:{type:"buffer",label:"Debug",usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}});L.prototype.makePerspective=function(f,t,e,i,s,r){const n=this.elements,a=2*s/(t-f),o=2*s/(e-i),l=(t+f)/(t-f),h=(e+i)/(e-i),c=s/(r-s),u=r*s/(r-s);return n[0]=a,n[4]=0,n[8]=l,n[12]=0,n[1]=0,n[5]=o,n[9]=h,n[13]=0,n[2]=0,n[6]=0,n[10]=c,n[14]=u,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this};L.prototype.makeOrthographic=function(f,t,e,i,s,r){const n=this.elements,a=1/(t-f),o=1/(e-i),l=1/(r-s),h=(t+f)*a,c=(e+i)*o,u=s*l;return n[0]=2*a,n[4]=0,n[8]=0,n[12]=-h,n[1]=0,n[5]=2*o,n[9]=0,n[13]=-c,n[2]=0,n[6]=0,n[10]=-1*l,n[14]=-u,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this};os.prototype.setFromProjectionMatrix=function(f){const t=this.planes,e=f.elements,i=e[0],s=e[1],r=e[2],n=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],u=e[9],d=e[10],p=e[11],y=e[12],g=e[13],b=e[14],M=e[15];return t[0].setComponents(n-i,h-a,p-c,M-y).normalize(),t[1].setComponents(n+i,h+a,p+c,M+y).normalize(),t[2].setComponents(n+s,h+o,p+u,M+g).normalize(),t[3].setComponents(n-s,h-o,p-u,M-g).normalize(),t[4].setComponents(n-r,h-l,p-d,M-b).normalize(),t[5].setComponents(r,l,d,b).normalize(),this};let E,Te,li;class br{constructor(t){A(this,"canvas");A(this,"context");A(this,"renderBundle");A(this,"renderDepthMapView");A(this,"camera");A(this,"globalResource");A(this,"particles");A(this,"simulator");this.canvas=t}RegisterResourceFormats(){Ki.RegisterResourceFormats(),ee.RegisterResourceFormats(),ie.RegisterResourceFormats(),se._RegisterResourceFormats()}async initWebGPU(){if(!navigator.gpu)throw new Error("Not Support WebGPU");const t=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!t)throw new Error("No Adapter Found");t.features.forEach(i=>console.log(`Support feature: ${i}`)),E=await t.requestDevice(),console.log(E);const e=this.canvas.getContext("webgpu");if(!e)throw new Error("Can Not Get GPUCanvasContext");this.context=e,li={width:this.canvas.width,height:this.canvas.height},Te=navigator.gpu.getPreferredCanvasFormat(),e.configure({device:E,usage:GPUTextureUsage.RENDER_ATTACHMENT,format:Te,alphaMode:"opaque"})}async initScene(t,e){this.RegisterResourceFormats(),this.camera=t,this.camera.updateMatrixWorld(),this.camera.updateProjectionMatrix(),this.globalResource=new Ki(t,e),await this.globalResource.initResource(),this.renderDepthMapView=this.globalResource.resource.renderDepthMap.createView(),this.simulator=new se,await this.simulator.initResource(),await this.simulator.initComputePipeline(),this.simulator.enableInteraction(),this.particles=new ee(this.simulator),this.particles.initVertexBuffer(),await this.particles.initGroupResource();const i=E.createRenderBundleEncoder({colorFormats:[Te],depthStencilFormat:"depth32float"});await this.particles.setRenderBundle(i,this.globalResource.resource),this.renderBundle=i.finish()}run(){const t=E.createCommandEncoder();for(let s=0;s<this.simulator.stepCount;s++)this.simulator.run(t);const e=t.beginRenderPass({colorAttachments:[{view:this.context.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:this.renderDepthMapView,depthClearValue:0,depthLoadOp:"clear",depthStoreOp:"store"}});e.executeBundles([this.renderBundle]),e.end();const i=t.finish();E.queue.submit([i])}update(){this.camera.updateMatrixWorld(),this.camera.updateProjectionMatrix(),this.globalResource.update(),this.simulator.update()}}class wr{constructor(){A(this,"canvas");A(this,"stats");A(this,"clock");A(this,"controller");this.canvas=document.querySelector("canvas");const t=window.devicePixelRatio||1;this.canvas.width=this.canvas.clientWidth*t,this.canvas.height=this.canvas.clientHeight*t,this.controller=new br(this.canvas),this.stats=new te,this.stats.showPanel(0),document.body.appendChild(this.stats.dom)}start(){const t=()=>{this.stats.begin(),this.controller.update(),this.controller.run(),this.stats.end(),requestAnimationFrame(t)};t()}async init(){const t=new tr(50,window.innerWidth/window.innerHeight,.1,100);t.position.set(2,2,0),t.lookAt(0,0,0),new lr(t,this.canvas);let e=new hr(16777215,1);e.position.set(-10,20,-10),await this.controller.initWebGPU(),await this.controller.initScene(t,e)}}const ts=new wr;ts.init().then(()=>ts.start());
